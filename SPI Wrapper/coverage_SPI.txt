Coverage Report by instance with details

=================================================================================
=== Instance: /top/inter
=== Design Unit: work.SPI_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         12        12         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/inter --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                              MISO           1           1      100.00 
                                       MISO_GOLDEN           1           1      100.00 
                                              MOSI           1           1      100.00 
                                              SS_n           1           1      100.00 
                                               clk           1           1      100.00 
                                             rst_n           1           1      100.00 

Total Node Count     =          6 
Toggled Node Count   =          6 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (12 of 12 bins)

=================================================================================
=== Instance: /top/inter_slave
=== Design Unit: work.SPI_SLAVE_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         74        74         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/inter_slave --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                              MISO           1           1      100.00 
                                          MISO_ref           1           1      100.00 
                                              MOSI           1           1      100.00 
                                              SS_n           1           1      100.00 
                                               clk           1           1      100.00 
                                             rst_n           1           1      100.00 
                                      rx_data[9-0]           1           1      100.00 
                                  rx_data_ref[9-0]           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                      rx_valid_ref           1           1      100.00 
                                      tx_data[7-0]           1           1      100.00 
                                          tx_valid           1           1      100.00 

Total Node Count     =         37 
Toggled Node Count   =         37 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (74 of 74 bins)

=================================================================================
=== Instance: /top/inter_ram
=== Design Unit: work.RAM_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         62        62         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/inter_ram --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 
                                          din[9-0]           1           1      100.00 
                                         dout[7-0]           1           1      100.00 
                                     dout_ref[7-0]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                          tx_valid           1           1      100.00 
                                      tx_valid_ref           1           1      100.00 

Total Node Count     =         31 
Toggled Node Count   =         31 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (62 of 62 bins)

=================================================================================
=== Instance: /top/DUT/DUT_SPI
=== Design Unit: work.SPI_SLAVE
=================================================================================

Assertion Coverage:
    Assertions                       9         9         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/DUT_SPI/assert__chck_state_read_datato_idle
                     SPI_SLAVE.sv(191)                  0          1
/top/DUT/DUT_SPI/assert__chck_state_read_add_to_idle
                     SPI_SLAVE.sv(190)                  0          1
/top/DUT/DUT_SPI/assert__chck_state_write_to_idle
                     SPI_SLAVE.sv(189)                  0          1
/top/DUT/DUT_SPI/assert__chck_state_read_data
                     SPI_SLAVE.sv(188)                  0          1
/top/DUT/DUT_SPI/assert__chck_state_read_add
                     SPI_SLAVE.sv(187)                  0          1
/top/DUT/DUT_SPI/assert__chck_state_write
                     SPI_SLAVE.sv(186)                  0          1
/top/DUT/DUT_SPI/assert__chck_state_idle
                     SPI_SLAVE.sv(185)                  0          1
/top/DUT/DUT_SPI/assert__chck_rx_valid
                     SPI_SLAVE.sv(184)                  0          1
/top/DUT/DUT_SPI/assert__chck_reset
                     SPI_SLAVE.sv(183)                  0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        34        34         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT/DUT_SPI

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_SLAVE.sv
------------------------------------IF Branch------------------------------------
    18                                      4804     Count coming in to IF
    18              1                        295         if (~rst_n) begin
    21              1                       4509         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    27                                     11417     Count coming in to CASE
    28              1                       2351             IDLE : begin
    34              1                       1752             CHK_CMD : begin
    48              1                       3737             WRITE : begin
    54              1                       2050             READ_ADD : begin
    60              1                       1526             READ_DATA : begin
                                               1     All False Count
Branch totals: 6 hits of 6 branches = 100.00%

------------------------------------IF Branch------------------------------------
    29                                      2351     Count coming in to IF
    29              1                        998                 if (SS_n)
    31              1                       1353                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    35                                      1752     Count coming in to IF
    35              1                         28                 if (SS_n)
    37              1                       1724                 else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    38                                      1724     Count coming in to IF
    38              1                       1138                     if (~MOSI) 
    40              1                        586                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    41                                       586     Count coming in to IF
    41              1                        190                           if (received_address) 
    43              1                        396                         else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    49                                      3737     Count coming in to IF
    49              1                        542                 if (SS_n)
    51              1                       3195                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    55                                      2050     Count coming in to IF
    55              1                        277                 if (SS_n)
    57              1                       1773                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    61                                      1526     Count coming in to IF
    61              1                        135                 if (SS_n)
    63              1                       1391                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    70                                     14818     Count coming in to IF
    70              1                        295         if (~rst_n) begin 
    77              1                      14523         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    86                                      6047     Count coming in to IF
    86              1                       5572                     if (counter > 0) begin
    90              1                        475                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    95                                      3060     Count coming in to IF
    95              1                       2611                     if (counter > 0) begin
    99              1                        449                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    106                                     2969     Count coming in to IF
    106             1                       1009                     if (tx_valid) begin 
    116             1                       1960                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    107                                     1009     Count coming in to IF
    107             1                        905                         if (counter > 0) begin
    111             1                        104                         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    117                                     1960     Count coming in to IF
    117             1                       1808                         if (counter > 0) begin // write data before going to read data
    121             1                        152                         else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         4         0   100.00%

================================Condition Details================================

Condition Coverage for instance /top/DUT/DUT_SPI --

  File SPI_SLAVE.sv
----------------Focused Condition View-------------------
Line       86 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             

----------------Focused Condition View-------------------
Line       95 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             

----------------Focused Condition View-------------------
Line       107 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             

----------------Focused Condition View-------------------
Line       117 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             



Directive Coverage:
    Directives                       9         9         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/DUT_SPI/cover__chck_state_read_datato_idle 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(201)
                                                                                57 Covered   
/top/DUT/DUT_SPI/cover__chck_state_read_add_to_idle 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(200)
                                                                                65 Covered   
/top/DUT/DUT_SPI/cover__chck_state_write_to_idle 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(199)
                                                                               124 Covered   
/top/DUT/DUT_SPI/cover__chck_state_read_data 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(198)
                                                                               184 Covered   
/top/DUT/DUT_SPI/cover__chck_state_read_add 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(197)
                                                                               324 Covered   
/top/DUT/DUT_SPI/cover__chck_state_write SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(196)
                                                                               638 Covered   
/top/DUT/DUT_SPI/cover__chck_state_idle  SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(195)
                                                                              1208 Covered   
/top/DUT/DUT_SPI/cover__chck_rx_valid    SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(194)
                                                                                 2 Covered   
/top/DUT/DUT_SPI/cover__chck_reset       SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(193)
                                                                               295 Covered   
FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       5         5         0   100.00%
    FSM Transitions                  8         8         0   100.00%

================================FSM Details================================

FSM Coverage for instance /top/DUT/DUT_SPI --

FSM_ID: cs
    Current State Object : cs
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  28                IDLE                   0
  34             CHK_CMD                   2
  54            READ_ADD                   3
  60           READ_DATA                   4
  48               WRITE                   1
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE                1271          
                 CHK_CMD                1229          
                READ_ADD                 645          
               READ_DATA                 373          
                   WRITE                1286          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  32                   0                1229          IDLE -> CHK_CMD               
  44                   1                 335          CHK_CMD -> READ_ADD           
  42                   2                 189          CHK_CMD -> READ_DATA          
  39                   3                 656          CHK_CMD -> WRITE              
  36                   4                  49          CHK_CMD -> IDLE               
  56                   5                 335          READ_ADD -> IDLE              
  62                   6                 189          READ_DATA -> IDLE             
  50                   7                 655          WRITE -> IDLE                 


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   5         5         0   100.00%
        FSM Transitions              8         8         0   100.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      39        39         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT/DUT_SPI --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_SLAVE.sv
    1                                                module SPI_SLAVE (MOSI,SS_n,clk,rst_n,rx_data,tx_valid,tx_data,MISO,rx_valid);
    2                                                input MOSI,SS_n,clk,rst_n,tx_valid;
    3                                                input [7:0] tx_data;
    4                                                output reg MISO,rx_valid;
    5                                                output  reg [9:0] rx_data;
    6                                                
    7                                                localparam IDLE      = 3'b000;
    8                                                localparam WRITE     = 3'b001;
    9                                                localparam CHK_CMD   = 3'b010;
    10                                               localparam READ_ADD  = 3'b011;
    11                                               localparam READ_DATA = 3'b100;
    12                                               
    13                                               reg [3:0] counter;
    14                                               reg       received_address;
    15                                               
    16                                               reg [2:0] cs, ns;
    17              1                       4804     always @(posedge clk) begin
    18                                                   if (~rst_n) begin
    19              1                        295             cs <= IDLE;
    20                                                   end
    21                                                   else begin
    22              1                       4509             cs <= ns;
    23                                                   end
    24                                               end
    25                                               
    26              1                      11417     always @(*) begin
    27                                                   case (cs)
    28                                                       IDLE : begin
    29                                                           if (SS_n)
    30              1                        998                     ns = IDLE;
    31                                                           else
    32              1                       1353                     ns = CHK_CMD;
    33                                                       end
    34                                                       CHK_CMD : begin
    35                                                           if (SS_n)
    36              1                         28                     ns = IDLE;
    37                                                           else begin
    38                                                               if (~MOSI) 
    39              1                       1138                         ns = WRITE;
    40                                                               else begin
    41                                                                     if (received_address) 
    42              1                        190                             ns = READ_DATA; 
    43                                                                   else
    44              1                        396                             ns = READ_ADD;
    45                                                               end
    46                                                           end
    47                                                       end
    48                                                       WRITE : begin
    49                                                           if (SS_n)
    50              1                        542                     ns = IDLE;
    51                                                           else
    52              1                       3195                     ns = WRITE;
    53                                                       end
    54                                                       READ_ADD : begin
    55                                                           if (SS_n)
    56              1                        277                     ns = IDLE;
    57                                                           else
    58              1                       1773                     ns = READ_ADD;
    59                                                       end
    60                                                       READ_DATA : begin
    61                                                           if (SS_n)
    62              1                        135                     ns = IDLE;
    63                                                           else
    64              1                       1391                     ns = READ_DATA;
    65                                                       end
    66                                                   endcase
    67                                               end
    68                                               
    69              1                      14818     always @(posedge clk) begin
    70                                                   if (~rst_n) begin 
    71              1                        295             rx_data <= 0;
    72              1                        295             rx_valid <= 0;
    73              1                        295             received_address <= 0;
    74              1                        295             MISO <= 0;
    75              1                        295             counter<=0; // reset 
    76                                                   end
    77                                                   else begin
    78                                                       case (cs)
    79                                                           IDLE : begin
    80              1                       1239                     rx_valid <= 0;
    81                                                           end
    82                                                           CHK_CMD : begin
    83              1                       1208                     counter <= 10;      
    84                                                           end
    85                                                           WRITE : begin
    86                                                               if (counter > 0) begin
    87              1                       5572                         rx_data[counter-1] <= MOSI;
    88              1                       5572                         counter <= counter - 1;
    89                                                               end
    90                                                               else begin
    91              1                        475                         rx_valid <= 1;
    92                                                               end
    93                                                           end
    94                                                           READ_ADD : begin
    95                                                               if (counter > 0) begin
    96              1                       2611                         rx_data[counter-1] <= MOSI;
    97              1                       2611                         counter <= counter - 1;
    98                                                               end
    99                                                               else begin
    100             1                        449                         rx_valid <= 1;
    101             1                        449                         received_address <= 1;
    102                                                              end
    103                                                          end
    104                                              
    105                                                          READ_DATA : begin
    106                                                              if (tx_valid) begin 
    107                                                                  if (counter > 0) begin
    108             1                        905                             MISO <= tx_data[counter-1];
    109             1                        905                             counter <= counter - 1;
    110                                                                  end
    111                                                                  else begin
    112             1                        104                             received_address <= 0;
    113             1                        104                              rx_valid <= 0;
    114                                                                  end
    115                                                              end
    116                                                              else begin
    117                                                                  if (counter > 0) begin // write data before going to read data
    118             1                       1808                             rx_data[counter-1] <= MOSI;
    119             1                       1808                             counter <= counter - 1;
    120                                                                  end
    121                                                                  else begin
    122             1                        152                             rx_valid <= 1;
    123             1                        152                             counter <= 9;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         72        72         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/DUT_SPI --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                              MISO           1           1      100.00 
                                              MOSI           1           1      100.00 
                                              SS_n           1           1      100.00 
                                               clk           1           1      100.00 
                                      counter[3-0]           1           1      100.00 
                                           cs[2-0]           1           1      100.00 
                                           ns[2-0]           1           1      100.00 
                                  received_address           1           1      100.00 
                                             rst_n           1           1      100.00 
                                      rx_data[9-0]           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                      tx_data[0-7]           1           1      100.00 
                                          tx_valid           1           1      100.00 

Total Node Count     =         36 
Toggled Node Count   =         36 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (72 of 72 bins)

=================================================================================
=== Instance: /top/DUT/DUT_RAM/RAM_BINDING
=== Design Unit: work.RAM_sva
=================================================================================

Assertion Coverage:
    Assertions                       5         5         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/DUT_RAM/RAM_BINDING/rst_n_assertion
                     RAM_sva.sv(2)                      0          1
/top/DUT/DUT_RAM/RAM_BINDING/tx_valid_0_assertion
                     RAM_sva.sv(3)                      0          1
/top/DUT/DUT_RAM/RAM_BINDING/tx_valid_1_assertion
                     RAM_sva.sv(4)                      0          1
/top/DUT/DUT_RAM/RAM_BINDING/wr_addr_then_wr_data_assertion
                     RAM_sva.sv(5)                      0          1
/top/DUT/DUT_RAM/RAM_BINDING/rd_addr_then_rd_data_assertion
                     RAM_sva.sv(6)                      0          1
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         44        44         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/DUT_RAM/RAM_BINDING --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 
                                          din[0-9]           1           1      100.00 
                                         dout[0-7]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                          tx_valid           1           1      100.00 

Total Node Count     =         22 
Toggled Node Count   =         22 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (44 of 44 bins)

=================================================================================
=== Instance: /top/DUT/DUT_RAM
=== Design Unit: work.RAM
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         8         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT/DUT_RAM

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM.v
------------------------------------IF Branch------------------------------------
    14                                      7177     Count coming in to IF
    14              1                        295         if (!rst_n) begin
    20              1                       6882         else begin // added begin_end to else branch                                        
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    21                                      6882     Count coming in to IF
    21              1                        948             if (rx_valid) begin
                                            5934     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    22                                       948     Count coming in to CASE
    23              1                        251                     2'b00 : WR_ADDR <= din[7:0];
    24              1                        197                     2'b01 : MEM[WR_ADDR] <= din[7:0];
    25              1                        163                     2'b10 : Rd_Addr <= din[7:0];
    27              1                        337                     2'b11 : dout <= MEM[Rd_Addr];
Branch totals: 4 hits of 4 branches = 100.00%


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      3         3         0   100.00%

================================Expression Details================================

Expression Coverage for instance /top/DUT/DUT_RAM --

  File RAM.v
----------------Focused Expression View-----------------
Line       31 Item    1  ((din[9] && din[8]) && rx_valid)
Expression totals: 3 of 3 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
      din[9]         Y
      din[8]         Y
    rx_valid         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  din[9]_0              -                             
  Row   2:          1  din[9]_1              (rx_valid && din[8])          
  Row   3:          1  din[8]_0              din[9]                        
  Row   4:          1  din[8]_1              (rx_valid && din[9])          
  Row   5:          1  rx_valid_0            (din[9] && din[8])            
  Row   6:          1  rx_valid_1            (din[9] && din[8])            


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      10        10         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT/DUT_RAM --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM.v
    1                                                module RAM (din,clk,rst_n,rx_valid,dout,tx_valid);
    2                                                
    3                                                input      [9:0] din;
    4                                                input            clk, rst_n, rx_valid;
    5                                                
    6                                                output reg [7:0] dout;
    7                                                output reg       tx_valid;
    8                                                
    9                                                reg [7:0] MEM [255:0];
    10                                               
    11                                               reg [7:0] Rd_Addr, WR_ADDR;
    12                                               
    13              1                       7177     always @(posedge clk) begin
    14                                                   if (!rst_n) begin
    15              1                        295             dout <= 0;
    16              1                        295             tx_valid <= 0;
    17              1                        295             Rd_Addr <= 0;
    18              1                        295             WR_ADDR <= 0;
    19                                                   end
    20                                                   else begin // added begin_end to else branch                                        
    21                                                       if (rx_valid) begin
    22                                                           case (din[9:8])
    23              1                        251                     2'b00 : WR_ADDR <= din[7:0];
    24              1                        197                     2'b01 : MEM[WR_ADDR] <= din[7:0];
    25              1                        163                     2'b10 : Rd_Addr <= din[7:0];
    26                                                               // 2'b11 : dout <= MEM[WR_ADDR]; bug 
    27              1                        337                     2'b11 : dout <= MEM[Rd_Addr];
    28                                                               default : dout <= 0;
    29                                                           endcase
    30                                                       end
    31              1                       6882             tx_valid <= (din[9] && din[8] && rx_valid)? 1'b1 : 1'b0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         76        76         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/DUT_RAM --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                      Rd_Addr[7-0]           1           1      100.00 
                                      WR_ADDR[7-0]           1           1      100.00 
                                               clk           1           1      100.00 
                                          din[0-9]           1           1      100.00 
                                         dout[7-0]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                          tx_valid           1           1      100.00 

Total Node Count     =         38 
Toggled Node Count   =         38 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (76 of 76 bins)

=================================================================================
=== Instance: /top/DUT/Wrapper_BINDING
=== Design Unit: work.SPI_sva
=================================================================================

Assertion Coverage:
    Assertions                       2         2         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/Wrapper_BINDING/RESET_assert
                     SPI_sva.sv(22)                     0          1
/top/DUT/Wrapper_BINDING/READ_DATA_assert
                     SPI_sva.sv(23)                     0          1

Directive Coverage:
    Directives                       2         2         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/Wrapper_BINDING/RESET_cover     SPI_sva Verilog  SVA  SPI_sva.sv(26)   295 Covered   
/top/DUT/Wrapper_BINDING/READ_DATA_cover SPI_sva Verilog  SVA  SPI_sva.sv(27)   958 Covered   
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         10        10         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/Wrapper_BINDING --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                              MISO           1           1      100.00 
                                              MOSI           1           1      100.00 
                                              SS_n           1           1      100.00 
                                               clk           1           1      100.00 
                                             rst_n           1           1      100.00 

Total Node Count     =          5 
Toggled Node Count   =          5 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (10 of 10 bins)

=================================================================================
=== Instance: /top/DUT
=== Design Unit: work.SPI_Wrapper
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         50        50         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                              MISO           1           1      100.00 
                                              MOSI           1           1      100.00 
                                              SS_n           1           1      100.00 
                                               clk           1           1      100.00 
                                             rst_n           1           1      100.00 
                                  rx_data_din[0-9]           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                 tx_data_dout[0-7]           1           1      100.00 
                                          tx_valid           1           1      100.00 

Total Node Count     =         25 
Toggled Node Count   =         25 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (50 of 50 bins)

=================================================================================
=== Instance: /top/DUT_GOLDEN/DUT_SPI_GOLDEN
=== Design Unit: work.SPI_SLAVE_GOLDEN
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        32        32         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT_GOLDEN/DUT_SPI_GOLDEN

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_SLAVE_GOLDEN.v
------------------------------------IF Branch------------------------------------
    15                                      4804     Count coming in to IF
    15              1                        295         if(~rst_n)
    17              1                       4509          else 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    21                                     11417     Count coming in to CASE
    22              1                       2351         IDLE: begin 
    28              1                       1752        CHK_CMD : begin 
    44              1                       3737        WRITE: begin
    51              1                       2050        READ_ADD :  begin 
    59              1                       1526        READ_DATA : begin 
                                               1     All False Count
Branch totals: 6 hits of 6 branches = 100.00%

------------------------------------IF Branch------------------------------------
    23                                      2351     Count coming in to IF
    23              1                        998             if(SS_n)
    25              1                       1353             else 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    29                                      1752     Count coming in to IF
    29              1                         28         if (SS_n)
    31              1                       1724         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    32                                      1724     Count coming in to IF
    32              1                       1138          if( ~MOSI) begin 
    35              1                        586         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    45                                      3737     Count coming in to IF
    45              1                       3195          if(SS_n==0 )
    47              1                        542          else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    52                                      2050     Count coming in to IF
    52              1                       1773         if(SS_n==0) begin
    55              1                        277         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    60                                      1526     Count coming in to IF
    60              1                       1391         if(SS_n==0)
    62              1                        135         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    69                                     14818     Count coming in to IF
    69              1                        295           if (~rst_n) begin 
    75              1                      14523         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    82                                      6047     Count coming in to IF
    82              1                       5572             if(counter>0) begin
    86              1                        475             else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    91                                      3060     Count coming in to IF
    91              1                       2611              if(counter>0) begin
    95              1                        449             else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    101                                     2969     Count coming in to IF
    101             1                       1009         if (tx_valid) begin
    111             1                       1960         else begin 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    102                                     1009     Count coming in to IF
    102             1                        905             if(counter>0) begin
    106             1                        104              else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    112                                     1960     Count coming in to IF
    112             1                       1808            if(counter>0) begin
    116             1                        152            else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         4         0   100.00%

================================Condition Details================================

Condition Coverage for instance /top/DUT_GOLDEN/DUT_SPI_GOLDEN --

  File SPI_SLAVE_GOLDEN.v
----------------Focused Condition View-------------------
Line       82 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             

----------------Focused Condition View-------------------
Line       91 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             

----------------Focused Condition View-------------------
Line       102 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             

----------------Focused Condition View-------------------
Line       112 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       5         5         0   100.00%
    FSM Transitions                  8         8         0   100.00%

================================FSM Details================================

FSM Coverage for instance /top/DUT_GOLDEN/DUT_SPI_GOLDEN --

FSM_ID: cs
    Current State Object : cs
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  22                IDLE                   0
  28             CHK_CMD                   1
  51            READ_ADD                   3
  59           READ_DATA                   4
  44               WRITE                   2
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE                1271          
                 CHK_CMD                1229          
                READ_ADD                 645          
               READ_DATA                 373          
                   WRITE                1286          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  26                   0                1229          IDLE -> CHK_CMD               
  39                   1                 335          CHK_CMD -> READ_ADD           
  38                   2                 189          CHK_CMD -> READ_DATA          
  33                   3                 656          CHK_CMD -> WRITE              
  30                   4                  49          CHK_CMD -> IDLE               
  56                   5                 335          READ_ADD -> IDLE              
  63                   6                 189          READ_DATA -> IDLE             
  48                   7                 655          WRITE -> IDLE                 


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   5         5         0   100.00%
        FSM Transitions              8         8         0   100.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      38        38         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT_GOLDEN/DUT_SPI_GOLDEN --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_SLAVE_GOLDEN.v
    1                                                module SPI_SLAVE_GOLDEN (MOSI,SS_n,clk,rst_n,rx_data,tx_valid,tx_data,MISO,rx_valid);
    2                                                input MOSI,SS_n,clk,rst_n,tx_valid;
    3                                                input [7:0] tx_data;
    4                                                output reg MISO,rx_valid;
    5                                                output  reg [9:0] rx_data;
    6                                                parameter IDLE=3'b000;
    7                                                parameter CHK_CMD=3'b001;
    8                                                parameter WRITE=3'b010;
    9                                                parameter READ_ADD=3'b011;
    10                                               parameter  READ_DATA=3'b100;
    11                                               reg ADDRESS_read; // this is signal to increment when  reading an address
    12                                               reg[3:0] counter;
    13                                               reg [2:0] cs ,ns;
    14              1                       4804     always@(posedge clk) begin 
    15                                                   if(~rst_n)
    16              1                        295          cs<=IDLE;
    17                                                    else 
    18              1                       4509          cs<=ns;
    19                                               end
    20              1                      11417     always@(*) begin 
    21                                                   case(cs)
    22                                                   IDLE: begin 
    23                                                       if(SS_n)
    24              1                        998             ns=IDLE;
    25                                                       else 
    26              1                       1353             ns=CHK_CMD;
    27                                                   end
    28                                                  CHK_CMD : begin 
    29                                                   if (SS_n)
    30              1                         28         ns = IDLE;
    31                                                   else begin
    32                                                    if( ~MOSI) begin 
    33              1                       1138             ns=WRITE;
    34                                                   end 
    35                                                   else begin
    36                                                       casex(ADDRESS_read)
    37              1                        396             1'b0 : ns=READ_ADD;
    38              1                        190             1'b1: ns=READ_DATA;
    39                                                       1'bx: ns=READ_ADD;
    40                                                       endcase
    41                                                   end
    42                                                  end
    43                                                  end
    44                                                  WRITE: begin
    45                                                    if(SS_n==0 )
    46              1                       3195          ns=WRITE;
    47                                                    else begin
    48              1                        542             ns=IDLE;
    49                                                    end
    50                                                  end
    51                                                  READ_ADD :  begin 
    52                                                   if(SS_n==0) begin
    53              1                       1773         ns=READ_ADD;
    54                                                   end
    55                                                   else begin
    56              1                        277             ns=IDLE;
    57                                                   end
    58                                                  end
    59                                                  READ_DATA : begin 
    60                                                   if(SS_n==0)
    61              1                       1391         ns=READ_DATA;
    62                                                   else begin
    63              1                        135             ns=IDLE;
    64                                                   end
    65                                                  end
    66                                                   endcase
    67                                               end
    68              1                      14818     always @(posedge clk) begin
    69                                                     if (~rst_n) begin 
    70              1                        295             rx_data <= 0;
    71              1                        295             rx_valid <= 0;
    72              1                        295             ADDRESS_read<= 0;
    73              1                        295             MISO <= 0;
    74                                                   end
    75                                                   else begin
    76                                                  case(cs)
    77              1                       1239         IDLE: rx_valid<=0;
    78                                                   CHK_CMD : begin
    79              1                       1208              counter<=10;
    80                                                   end
    81                                                   WRITE  : begin 
    82                                                       if(counter>0) begin
    83              1                       5572             rx_data[counter-1]<=MOSI;
    84              1                       5572             counter<=counter-1;
    85                                                       end
    86                                                       else begin
    87              1                        475                 rx_valid<=1;
    88                                                       end
    89                                                   end
    90                                                   READ_ADD : begin 
    91                                                        if(counter>0) begin
    92              1                       2611             rx_data[counter-1]<=MOSI;
    93              1                       2611             counter<=counter-1;
    94                                                       end
    95                                                       else begin
    96              1                        449                 rx_valid<=1;
    97              1                        449                 ADDRESS_read<=1;
    98                                                       end
    99                                                   end
    100                                                 READ_DATA : begin 
    101                                                  if (tx_valid) begin
    102                                                      if(counter>0) begin
    103             1                        905                 MISO<=tx_data[counter-1];
    104             1                        905                  counter<=counter-1;
    105                                                      end
    106                                                       else begin
    107             1                        104                     ADDRESS_read <= 0;
    108             1                        104                     rx_valid<=0;
    109                                                       end
    110                                                  end
    111                                                  else begin 
    112                                                     if(counter>0) begin
    113             1                       1808             rx_data[counter-1]<=MOSI;
    114             1                       1808             counter<=counter-1;
    115                                                     end
    116                                                     else begin
    117             1                        152             rx_valid<=1;
    118             1                        152             counter<=9;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         72        72         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT_GOLDEN/DUT_SPI_GOLDEN --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                      ADDRESS_read           1           1      100.00 
                                              MISO           1           1      100.00 
                                              MOSI           1           1      100.00 
                                              SS_n           1           1      100.00 
                                               clk           1           1      100.00 
                                      counter[3-0]           1           1      100.00 
                                           cs[2-0]           1           1      100.00 
                                           ns[2-0]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                      rx_data[9-0]           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                      tx_data[0-7]           1           1      100.00 
                                          tx_valid           1           1      100.00 

Total Node Count     =         36 
Toggled Node Count   =         36 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (72 of 72 bins)

=================================================================================
=== Instance: /top/DUT_GOLDEN/DUT_RAM_GOLDEN
=== Design Unit: work.RAM_GOLDEN
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         9         8         1    88.88%

================================Branch Details================================

Branch Coverage for instance /top/DUT_GOLDEN/DUT_RAM_GOLDEN

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_GOLDEN.v
------------------------------------IF Branch------------------------------------
    13                                      7177     Count coming in to IF
    13              1                        295         if(!rst_n) begin
    19              1                       6882         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    20                                      6882     Count coming in to IF
    20              1                        948             if(rx_valid) begin
                                            5934     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    21                                       948     Count coming in to CASE
    22              1                        251                     2'b00: begin
    25              1                        197                     2'b01: begin
    28              1                        163                     2'b10: begin
    31              1                        337                     2'b11: begin
                                         ***0***     All False Count
Branch totals: 4 hits of 5 branches = 80.00%


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      3         3         0   100.00%

================================Expression Details================================

Expression Coverage for instance /top/DUT_GOLDEN/DUT_RAM_GOLDEN --

  File RAM_GOLDEN.v
----------------Focused Expression View-----------------
Line       36 Item    1  ((din[9] && din[8]) && rx_valid)
Expression totals: 3 of 3 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
      din[9]         Y
      din[8]         Y
    rx_valid         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  din[9]_0              -                             
  Row   2:          1  din[9]_1              (rx_valid && din[8])          
  Row   3:          1  din[8]_0              din[9]                        
  Row   4:          1  din[8]_1              (rx_valid && din[9])          
  Row   5:          1  rx_valid_0            (din[9] && din[8])            
  Row   6:          1  rx_valid_1            (din[9] && din[8])            


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      10        10         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT_GOLDEN/DUT_RAM_GOLDEN --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_GOLDEN.v
    1                                                module RAM_GOLDEN (clk, rst_n, din, rx_valid, dout, tx_valid);
    2                                                input clk, rst_n, rx_valid;
    3                                                input [9:0] din;
    4                                                output reg tx_valid;
    5                                                output reg [7:0] dout;
    6                                                
    7                                                parameter MEM_DEPTH = 256, ADDR_SIZE = 8;
    8                                                
    9                                                reg [ADDR_SIZE-1 :0] mem [MEM_DEPTH-1 :0];
    10                                               
    11                                               reg [ADDR_SIZE - 1 : 0] wr_address, rd_address;
    12              1                       7177     always @(posedge clk) begin
    13                                                   if(!rst_n) begin
    14              1                        295           dout <= 0;
    15              1                        295           wr_address <= 0;
    16              1                        295           rd_address <= 0;
    17              1                        295           tx_valid <= 0;
    18                                                   end
    19                                                   else begin
    20                                                       if(rx_valid) begin
    21                                                           case ({din[9:8]})
    22                                                               2'b00: begin
    23              1                        251                       wr_address <= din[7:0];
    24                                                               end
    25                                                               2'b01: begin
    26              1                        197                       mem[wr_address] <= din[7:0];
    27                                                               end
    28                                                               2'b10: begin
    29              1                        163                       rd_address <= din[7:0];
    30                                                               end
    31                                                               2'b11: begin
    32              1                        337                       dout <= mem[rd_address];
    33                                                               end
    34                                                           endcase
    35                                                       end
    36              1                       6882             tx_valid <= (din[9] && din[8] && rx_valid)? 1'b1 : 1'b0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         76        76         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT_GOLDEN/DUT_RAM_GOLDEN --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 
                                          din[0-9]           1           1      100.00 
                                         dout[7-0]           1           1      100.00 
                                   rd_address[7-0]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                          tx_valid           1           1      100.00 
                                   wr_address[7-0]           1           1      100.00 

Total Node Count     =         38 
Toggled Node Count   =         38 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (76 of 76 bins)

=================================================================================
=== Instance: /top/DUT_GOLDEN
=== Design Unit: work.SPI_Wrapper_GOLDEN
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         50        50         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT_GOLDEN --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                              MISO           1           1      100.00 
                                              MOSI           1           1      100.00 
                                              SS_n           1           1      100.00 
                                               clk           1           1      100.00 
                                             rst_n           1           1      100.00 
                                  rx_data_din[0-9]           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                 tx_data_dout[0-7]           1           1      100.00 
                                          tx_valid           1           1      100.00 

Total Node Count     =         25 
Toggled Node Count   =         25 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (50 of 50 bins)

=================================================================================
=== Instance: /top/DUT_SPI_SLAVE
=== Design Unit: work.SPI_SLAVE
=================================================================================

Assertion Coverage:
    Assertions                       9         9         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT_SPI_SLAVE/assert__chck_state_read_datato_idle
                     SPI_SLAVE.sv(191)                  0          1
/top/DUT_SPI_SLAVE/assert__chck_state_read_add_to_idle
                     SPI_SLAVE.sv(190)                  0          1
/top/DUT_SPI_SLAVE/assert__chck_state_write_to_idle
                     SPI_SLAVE.sv(189)                  0          1
/top/DUT_SPI_SLAVE/assert__chck_state_read_data
                     SPI_SLAVE.sv(188)                  0          1
/top/DUT_SPI_SLAVE/assert__chck_state_read_add
                     SPI_SLAVE.sv(187)                  0          1
/top/DUT_SPI_SLAVE/assert__chck_state_write
                     SPI_SLAVE.sv(186)                  0          1
/top/DUT_SPI_SLAVE/assert__chck_state_idle
                     SPI_SLAVE.sv(185)                  0          1
/top/DUT_SPI_SLAVE/assert__chck_rx_valid
                     SPI_SLAVE.sv(184)                  0          1
/top/DUT_SPI_SLAVE/assert__chck_reset
                     SPI_SLAVE.sv(183)                  0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        34        34         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT_SPI_SLAVE

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_SLAVE.sv
------------------------------------IF Branch------------------------------------
    18                                      4804     Count coming in to IF
    18              1                        295         if (~rst_n) begin
    21              1                       4509         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    27                                     11417     Count coming in to CASE
    28              1                       2351             IDLE : begin
    34              1                       1752             CHK_CMD : begin
    48              1                       3737             WRITE : begin
    54              1                       2050             READ_ADD : begin
    60              1                       1526             READ_DATA : begin
                                               1     All False Count
Branch totals: 6 hits of 6 branches = 100.00%

------------------------------------IF Branch------------------------------------
    29                                      2351     Count coming in to IF
    29              1                        998                 if (SS_n)
    31              1                       1353                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    35                                      1752     Count coming in to IF
    35              1                         28                 if (SS_n)
    37              1                       1724                 else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    38                                      1724     Count coming in to IF
    38              1                       1138                     if (~MOSI) 
    40              1                        586                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    41                                       586     Count coming in to IF
    41              1                        190                           if (received_address) 
    43              1                        396                         else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    49                                      3737     Count coming in to IF
    49              1                        542                 if (SS_n)
    51              1                       3195                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    55                                      2050     Count coming in to IF
    55              1                        277                 if (SS_n)
    57              1                       1773                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    61                                      1526     Count coming in to IF
    61              1                        135                 if (SS_n)
    63              1                       1391                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    70                                     14818     Count coming in to IF
    70              1                        295         if (~rst_n) begin 
    77              1                      14523         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    86                                      6047     Count coming in to IF
    86              1                       5572                     if (counter > 0) begin
    90              1                        475                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    95                                      3060     Count coming in to IF
    95              1                       2611                     if (counter > 0) begin
    99              1                        449                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    106                                     2969     Count coming in to IF
    106             1                       1009                     if (tx_valid) begin 
    116             1                       1960                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    107                                     1009     Count coming in to IF
    107             1                        905                         if (counter > 0) begin
    111             1                        104                         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    117                                     1960     Count coming in to IF
    117             1                       1808                         if (counter > 0) begin // write data before going to read data
    121             1                        152                         else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         4         0   100.00%

================================Condition Details================================

Condition Coverage for instance /top/DUT_SPI_SLAVE --

  File SPI_SLAVE.sv
----------------Focused Condition View-------------------
Line       86 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             

----------------Focused Condition View-------------------
Line       95 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             

----------------Focused Condition View-------------------
Line       107 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             

----------------Focused Condition View-------------------
Line       117 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             



Directive Coverage:
    Directives                       9         9         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT_SPI_SLAVE/cover__chck_state_read_datato_idle 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(201)
                                                                                57 Covered   
/top/DUT_SPI_SLAVE/cover__chck_state_read_add_to_idle 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(200)
                                                                                65 Covered   
/top/DUT_SPI_SLAVE/cover__chck_state_write_to_idle 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(199)
                                                                               124 Covered   
/top/DUT_SPI_SLAVE/cover__chck_state_read_data 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(198)
                                                                               184 Covered   
/top/DUT_SPI_SLAVE/cover__chck_state_read_add 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(197)
                                                                               324 Covered   
/top/DUT_SPI_SLAVE/cover__chck_state_write 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(196)
                                                                               638 Covered   
/top/DUT_SPI_SLAVE/cover__chck_state_idle 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(195)
                                                                              1208 Covered   
/top/DUT_SPI_SLAVE/cover__chck_rx_valid  SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(194)
                                                                                 2 Covered   
/top/DUT_SPI_SLAVE/cover__chck_reset     SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(193)
                                                                               295 Covered   
FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       5         5         0   100.00%
    FSM Transitions                  8         8         0   100.00%

================================FSM Details================================

FSM Coverage for instance /top/DUT_SPI_SLAVE --

FSM_ID: cs
    Current State Object : cs
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  28                IDLE                   0
  34             CHK_CMD                   2
  54            READ_ADD                   3
  60           READ_DATA                   4
  48               WRITE                   1
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE                1271          
                 CHK_CMD                1229          
                READ_ADD                 645          
               READ_DATA                 373          
                   WRITE                1286          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  32                   0                1229          IDLE -> CHK_CMD               
  44                   1                 335          CHK_CMD -> READ_ADD           
  42                   2                 189          CHK_CMD -> READ_DATA          
  39                   3                 656          CHK_CMD -> WRITE              
  36                   4                  49          CHK_CMD -> IDLE               
  56                   5                 335          READ_ADD -> IDLE              
  62                   6                 189          READ_DATA -> IDLE             
  50                   7                 655          WRITE -> IDLE                 


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   5         5         0   100.00%
        FSM Transitions              8         8         0   100.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      39        39         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT_SPI_SLAVE --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_SLAVE.sv
    1                                                module SPI_SLAVE (MOSI,SS_n,clk,rst_n,rx_data,tx_valid,tx_data,MISO,rx_valid);
    2                                                input MOSI,SS_n,clk,rst_n,tx_valid;
    3                                                input [7:0] tx_data;
    4                                                output reg MISO,rx_valid;
    5                                                output  reg [9:0] rx_data;
    6                                                
    7                                                localparam IDLE      = 3'b000;
    8                                                localparam WRITE     = 3'b001;
    9                                                localparam CHK_CMD   = 3'b010;
    10                                               localparam READ_ADD  = 3'b011;
    11                                               localparam READ_DATA = 3'b100;
    12                                               
    13                                               reg [3:0] counter;
    14                                               reg       received_address;
    15                                               
    16                                               reg [2:0] cs, ns;
    17              1                       4804     always @(posedge clk) begin
    18                                                   if (~rst_n) begin
    19              1                        295             cs <= IDLE;
    20                                                   end
    21                                                   else begin
    22              1                       4509             cs <= ns;
    23                                                   end
    24                                               end
    25                                               
    26              1                      11417     always @(*) begin
    27                                                   case (cs)
    28                                                       IDLE : begin
    29                                                           if (SS_n)
    30              1                        998                     ns = IDLE;
    31                                                           else
    32              1                       1353                     ns = CHK_CMD;
    33                                                       end
    34                                                       CHK_CMD : begin
    35                                                           if (SS_n)
    36              1                         28                     ns = IDLE;
    37                                                           else begin
    38                                                               if (~MOSI) 
    39              1                       1138                         ns = WRITE;
    40                                                               else begin
    41                                                                     if (received_address) 
    42              1                        190                             ns = READ_DATA; 
    43                                                                   else
    44              1                        396                             ns = READ_ADD;
    45                                                               end
    46                                                           end
    47                                                       end
    48                                                       WRITE : begin
    49                                                           if (SS_n)
    50              1                        542                     ns = IDLE;
    51                                                           else
    52              1                       3195                     ns = WRITE;
    53                                                       end
    54                                                       READ_ADD : begin
    55                                                           if (SS_n)
    56              1                        277                     ns = IDLE;
    57                                                           else
    58              1                       1773                     ns = READ_ADD;
    59                                                       end
    60                                                       READ_DATA : begin
    61                                                           if (SS_n)
    62              1                        135                     ns = IDLE;
    63                                                           else
    64              1                       1391                     ns = READ_DATA;
    65                                                       end
    66                                                   endcase
    67                                               end
    68                                               
    69              1                      14818     always @(posedge clk) begin
    70                                                   if (~rst_n) begin 
    71              1                        295             rx_data <= 0;
    72              1                        295             rx_valid <= 0;
    73              1                        295             received_address <= 0;
    74              1                        295             MISO <= 0;
    75              1                        295             counter<=0; // reset 
    76                                                   end
    77                                                   else begin
    78                                                       case (cs)
    79                                                           IDLE : begin
    80              1                       1239                     rx_valid <= 0;
    81                                                           end
    82                                                           CHK_CMD : begin
    83              1                       1208                     counter <= 10;      
    84                                                           end
    85                                                           WRITE : begin
    86                                                               if (counter > 0) begin
    87              1                       5572                         rx_data[counter-1] <= MOSI;
    88              1                       5572                         counter <= counter - 1;
    89                                                               end
    90                                                               else begin
    91              1                        475                         rx_valid <= 1;
    92                                                               end
    93                                                           end
    94                                                           READ_ADD : begin
    95                                                               if (counter > 0) begin
    96              1                       2611                         rx_data[counter-1] <= MOSI;
    97              1                       2611                         counter <= counter - 1;
    98                                                               end
    99                                                               else begin
    100             1                        449                         rx_valid <= 1;
    101             1                        449                         received_address <= 1;
    102                                                              end
    103                                                          end
    104                                              
    105                                                          READ_DATA : begin
    106                                                              if (tx_valid) begin 
    107                                                                  if (counter > 0) begin
    108             1                        905                             MISO <= tx_data[counter-1];
    109             1                        905                             counter <= counter - 1;
    110                                                                  end
    111                                                                  else begin
    112             1                        104                             received_address <= 0;
    113             1                        104                              rx_valid <= 0;
    114                                                                  end
    115                                                              end
    116                                                              else begin
    117                                                                  if (counter > 0) begin // write data before going to read data
    118             1                       1808                             rx_data[counter-1] <= MOSI;
    119             1                       1808                             counter <= counter - 1;
    120                                                                  end
    121                                                                  else begin
    122             1                        152                             rx_valid <= 1;
    123             1                        152                             counter <= 9;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         72        72         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT_SPI_SLAVE --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                              MISO           1           1      100.00 
                                              MOSI           1           1      100.00 
                                              SS_n           1           1      100.00 
                                               clk           1           1      100.00 
                                      counter[3-0]           1           1      100.00 
                                           cs[2-0]           1           1      100.00 
                                           ns[2-0]           1           1      100.00 
                                  received_address           1           1      100.00 
                                             rst_n           1           1      100.00 
                                      rx_data[9-0]           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                      tx_data[0-7]           1           1      100.00 
                                          tx_valid           1           1      100.00 

Total Node Count     =         36 
Toggled Node Count   =         36 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (72 of 72 bins)

=================================================================================
=== Instance: /top/DUT_SPI_SLAVE_GOLDEN
=== Design Unit: work.SPI_SLAVE_GOLDEN
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        32        32         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT_SPI_SLAVE_GOLDEN

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_SLAVE_GOLDEN.v
------------------------------------IF Branch------------------------------------
    15                                      4804     Count coming in to IF
    15              1                        295         if(~rst_n)
    17              1                       4509          else 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    21                                     11417     Count coming in to CASE
    22              1                       2351         IDLE: begin 
    28              1                       1752        CHK_CMD : begin 
    44              1                       3737        WRITE: begin
    51              1                       2050        READ_ADD :  begin 
    59              1                       1526        READ_DATA : begin 
                                               1     All False Count
Branch totals: 6 hits of 6 branches = 100.00%

------------------------------------IF Branch------------------------------------
    23                                      2351     Count coming in to IF
    23              1                        998             if(SS_n)
    25              1                       1353             else 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    29                                      1752     Count coming in to IF
    29              1                         28         if (SS_n)
    31              1                       1724         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    32                                      1724     Count coming in to IF
    32              1                       1138          if( ~MOSI) begin 
    35              1                        586         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    45                                      3737     Count coming in to IF
    45              1                       3195          if(SS_n==0 )
    47              1                        542          else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    52                                      2050     Count coming in to IF
    52              1                       1773         if(SS_n==0) begin
    55              1                        277         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    60                                      1526     Count coming in to IF
    60              1                       1391         if(SS_n==0)
    62              1                        135         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    69                                     14818     Count coming in to IF
    69              1                        295           if (~rst_n) begin 
    75              1                      14523         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    82                                      6047     Count coming in to IF
    82              1                       5572             if(counter>0) begin
    86              1                        475             else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    91                                      3060     Count coming in to IF
    91              1                       2611              if(counter>0) begin
    95              1                        449             else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    101                                     2969     Count coming in to IF
    101             1                       1009         if (tx_valid) begin
    111             1                       1960         else begin 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    102                                     1009     Count coming in to IF
    102             1                        905             if(counter>0) begin
    106             1                        104              else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    112                                     1960     Count coming in to IF
    112             1                       1808            if(counter>0) begin
    116             1                        152            else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         4         0   100.00%

================================Condition Details================================

Condition Coverage for instance /top/DUT_SPI_SLAVE_GOLDEN --

  File SPI_SLAVE_GOLDEN.v
----------------Focused Condition View-------------------
Line       82 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             

----------------Focused Condition View-------------------
Line       91 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             

----------------Focused Condition View-------------------
Line       102 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             

----------------Focused Condition View-------------------
Line       112 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       5         5         0   100.00%
    FSM Transitions                  8         8         0   100.00%

================================FSM Details================================

FSM Coverage for instance /top/DUT_SPI_SLAVE_GOLDEN --

FSM_ID: cs
    Current State Object : cs
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  22                IDLE                   0
  28             CHK_CMD                   1
  51            READ_ADD                   3
  59           READ_DATA                   4
  44               WRITE                   2
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE                1271          
                 CHK_CMD                1229          
                READ_ADD                 645          
               READ_DATA                 373          
                   WRITE                1286          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  26                   0                1229          IDLE -> CHK_CMD               
  39                   1                 335          CHK_CMD -> READ_ADD           
  38                   2                 189          CHK_CMD -> READ_DATA          
  33                   3                 656          CHK_CMD -> WRITE              
  30                   4                  49          CHK_CMD -> IDLE               
  56                   5                 335          READ_ADD -> IDLE              
  63                   6                 189          READ_DATA -> IDLE             
  48                   7                 655          WRITE -> IDLE                 


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   5         5         0   100.00%
        FSM Transitions              8         8         0   100.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      38        38         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT_SPI_SLAVE_GOLDEN --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_SLAVE_GOLDEN.v
    1                                                module SPI_SLAVE_GOLDEN (MOSI,SS_n,clk,rst_n,rx_data,tx_valid,tx_data,MISO,rx_valid);
    2                                                input MOSI,SS_n,clk,rst_n,tx_valid;
    3                                                input [7:0] tx_data;
    4                                                output reg MISO,rx_valid;
    5                                                output  reg [9:0] rx_data;
    6                                                parameter IDLE=3'b000;
    7                                                parameter CHK_CMD=3'b001;
    8                                                parameter WRITE=3'b010;
    9                                                parameter READ_ADD=3'b011;
    10                                               parameter  READ_DATA=3'b100;
    11                                               reg ADDRESS_read; // this is signal to increment when  reading an address
    12                                               reg[3:0] counter;
    13                                               reg [2:0] cs ,ns;
    14              1                       4804     always@(posedge clk) begin 
    15                                                   if(~rst_n)
    16              1                        295          cs<=IDLE;
    17                                                    else 
    18              1                       4509          cs<=ns;
    19                                               end
    20              1                      11417     always@(*) begin 
    21                                                   case(cs)
    22                                                   IDLE: begin 
    23                                                       if(SS_n)
    24              1                        998             ns=IDLE;
    25                                                       else 
    26              1                       1353             ns=CHK_CMD;
    27                                                   end
    28                                                  CHK_CMD : begin 
    29                                                   if (SS_n)
    30              1                         28         ns = IDLE;
    31                                                   else begin
    32                                                    if( ~MOSI) begin 
    33              1                       1138             ns=WRITE;
    34                                                   end 
    35                                                   else begin
    36                                                       casex(ADDRESS_read)
    37              1                        396             1'b0 : ns=READ_ADD;
    38              1                        190             1'b1: ns=READ_DATA;
    39                                                       1'bx: ns=READ_ADD;
    40                                                       endcase
    41                                                   end
    42                                                  end
    43                                                  end
    44                                                  WRITE: begin
    45                                                    if(SS_n==0 )
    46              1                       3195          ns=WRITE;
    47                                                    else begin
    48              1                        542             ns=IDLE;
    49                                                    end
    50                                                  end
    51                                                  READ_ADD :  begin 
    52                                                   if(SS_n==0) begin
    53              1                       1773         ns=READ_ADD;
    54                                                   end
    55                                                   else begin
    56              1                        277             ns=IDLE;
    57                                                   end
    58                                                  end
    59                                                  READ_DATA : begin 
    60                                                   if(SS_n==0)
    61              1                       1391         ns=READ_DATA;
    62                                                   else begin
    63              1                        135             ns=IDLE;
    64                                                   end
    65                                                  end
    66                                                   endcase
    67                                               end
    68              1                      14818     always @(posedge clk) begin
    69                                                     if (~rst_n) begin 
    70              1                        295             rx_data <= 0;
    71              1                        295             rx_valid <= 0;
    72              1                        295             ADDRESS_read<= 0;
    73              1                        295             MISO <= 0;
    74                                                   end
    75                                                   else begin
    76                                                  case(cs)
    77              1                       1239         IDLE: rx_valid<=0;
    78                                                   CHK_CMD : begin
    79              1                       1208              counter<=10;
    80                                                   end
    81                                                   WRITE  : begin 
    82                                                       if(counter>0) begin
    83              1                       5572             rx_data[counter-1]<=MOSI;
    84              1                       5572             counter<=counter-1;
    85                                                       end
    86                                                       else begin
    87              1                        475                 rx_valid<=1;
    88                                                       end
    89                                                   end
    90                                                   READ_ADD : begin 
    91                                                        if(counter>0) begin
    92              1                       2611             rx_data[counter-1]<=MOSI;
    93              1                       2611             counter<=counter-1;
    94                                                       end
    95                                                       else begin
    96              1                        449                 rx_valid<=1;
    97              1                        449                 ADDRESS_read<=1;
    98                                                       end
    99                                                   end
    100                                                 READ_DATA : begin 
    101                                                  if (tx_valid) begin
    102                                                      if(counter>0) begin
    103             1                        905                 MISO<=tx_data[counter-1];
    104             1                        905                  counter<=counter-1;
    105                                                      end
    106                                                       else begin
    107             1                        104                     ADDRESS_read <= 0;
    108             1                        104                     rx_valid<=0;
    109                                                       end
    110                                                  end
    111                                                  else begin 
    112                                                     if(counter>0) begin
    113             1                       1808             rx_data[counter-1]<=MOSI;
    114             1                       1808             counter<=counter-1;
    115                                                     end
    116                                                     else begin
    117             1                        152             rx_valid<=1;
    118             1                        152             counter<=9;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         72        72         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT_SPI_SLAVE_GOLDEN --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                      ADDRESS_read           1           1      100.00 
                                              MISO           1           1      100.00 
                                              MOSI           1           1      100.00 
                                              SS_n           1           1      100.00 
                                               clk           1           1      100.00 
                                      counter[3-0]           1           1      100.00 
                                           cs[2-0]           1           1      100.00 
                                           ns[2-0]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                      rx_data[9-0]           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                      tx_data[0-7]           1           1      100.00 
                                          tx_valid           1           1      100.00 

Total Node Count     =         36 
Toggled Node Count   =         36 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (72 of 72 bins)

=================================================================================
=== Instance: /top/DUT_RAM/RAM_BINDING
=== Design Unit: work.RAM_sva
=================================================================================

Assertion Coverage:
    Assertions                       5         5         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT_RAM/RAM_BINDING/rst_n_assertion
                     RAM_sva.sv(2)                      0          1
/top/DUT_RAM/RAM_BINDING/tx_valid_0_assertion
                     RAM_sva.sv(3)                      0          1
/top/DUT_RAM/RAM_BINDING/tx_valid_1_assertion
                     RAM_sva.sv(4)                      0          1
/top/DUT_RAM/RAM_BINDING/wr_addr_then_wr_data_assertion
                     RAM_sva.sv(5)                      0          1
/top/DUT_RAM/RAM_BINDING/rd_addr_then_rd_data_assertion
                     RAM_sva.sv(6)                      0          1
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         44        44         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT_RAM/RAM_BINDING --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 
                                          din[0-9]           1           1      100.00 
                                         dout[0-7]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                          tx_valid           1           1      100.00 

Total Node Count     =         22 
Toggled Node Count   =         22 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (44 of 44 bins)

=================================================================================
=== Instance: /top/DUT_RAM
=== Design Unit: work.RAM
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         8         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT_RAM

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM.v
------------------------------------IF Branch------------------------------------
    14                                      7177     Count coming in to IF
    14              1                        295         if (!rst_n) begin
    20              1                       6882         else begin // added begin_end to else branch                                        
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    21                                      6882     Count coming in to IF
    21              1                        948             if (rx_valid) begin
                                            5934     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    22                                       948     Count coming in to CASE
    23              1                        251                     2'b00 : WR_ADDR <= din[7:0];
    24              1                        197                     2'b01 : MEM[WR_ADDR] <= din[7:0];
    25              1                        163                     2'b10 : Rd_Addr <= din[7:0];
    27              1                        337                     2'b11 : dout <= MEM[Rd_Addr];
Branch totals: 4 hits of 4 branches = 100.00%


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      3         3         0   100.00%

================================Expression Details================================

Expression Coverage for instance /top/DUT_RAM --

  File RAM.v
----------------Focused Expression View-----------------
Line       31 Item    1  ((din[9] && din[8]) && rx_valid)
Expression totals: 3 of 3 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
      din[9]         Y
      din[8]         Y
    rx_valid         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  din[9]_0              -                             
  Row   2:          1  din[9]_1              (rx_valid && din[8])          
  Row   3:          1  din[8]_0              din[9]                        
  Row   4:          1  din[8]_1              (rx_valid && din[9])          
  Row   5:          1  rx_valid_0            (din[9] && din[8])            
  Row   6:          1  rx_valid_1            (din[9] && din[8])            


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      10        10         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT_RAM --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM.v
    1                                                module RAM (din,clk,rst_n,rx_valid,dout,tx_valid);
    2                                                
    3                                                input      [9:0] din;
    4                                                input            clk, rst_n, rx_valid;
    5                                                
    6                                                output reg [7:0] dout;
    7                                                output reg       tx_valid;
    8                                                
    9                                                reg [7:0] MEM [255:0];
    10                                               
    11                                               reg [7:0] Rd_Addr, WR_ADDR;
    12                                               
    13              1                       7177     always @(posedge clk) begin
    14                                                   if (!rst_n) begin
    15              1                        295             dout <= 0;
    16              1                        295             tx_valid <= 0;
    17              1                        295             Rd_Addr <= 0;
    18              1                        295             WR_ADDR <= 0;
    19                                                   end
    20                                                   else begin // added begin_end to else branch                                        
    21                                                       if (rx_valid) begin
    22                                                           case (din[9:8])
    23              1                        251                     2'b00 : WR_ADDR <= din[7:0];
    24              1                        197                     2'b01 : MEM[WR_ADDR] <= din[7:0];
    25              1                        163                     2'b10 : Rd_Addr <= din[7:0];
    26                                                               // 2'b11 : dout <= MEM[WR_ADDR]; bug 
    27              1                        337                     2'b11 : dout <= MEM[Rd_Addr];
    28                                                               default : dout <= 0;
    29                                                           endcase
    30                                                       end
    31              1                       6882             tx_valid <= (din[9] && din[8] && rx_valid)? 1'b1 : 1'b0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         76        76         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT_RAM --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                      Rd_Addr[7-0]           1           1      100.00 
                                      WR_ADDR[7-0]           1           1      100.00 
                                               clk           1           1      100.00 
                                          din[0-9]           1           1      100.00 
                                         dout[7-0]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                          tx_valid           1           1      100.00 

Total Node Count     =         38 
Toggled Node Count   =         38 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (76 of 76 bins)

=================================================================================
=== Instance: /top/DUT_RAM_GOLDEN
=== Design Unit: work.RAM_GOLDEN
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         9         8         1    88.88%

================================Branch Details================================

Branch Coverage for instance /top/DUT_RAM_GOLDEN

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_GOLDEN.v
------------------------------------IF Branch------------------------------------
    13                                      7177     Count coming in to IF
    13              1                        295         if(!rst_n) begin
    19              1                       6882         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    20                                      6882     Count coming in to IF
    20              1                        948             if(rx_valid) begin
                                            5934     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    21                                       948     Count coming in to CASE
    22              1                        251                     2'b00: begin
    25              1                        197                     2'b01: begin
    28              1                        163                     2'b10: begin
    31              1                        337                     2'b11: begin
                                         ***0***     All False Count
Branch totals: 4 hits of 5 branches = 80.00%


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      3         3         0   100.00%

================================Expression Details================================

Expression Coverage for instance /top/DUT_RAM_GOLDEN --

  File RAM_GOLDEN.v
----------------Focused Expression View-----------------
Line       36 Item    1  ((din[9] && din[8]) && rx_valid)
Expression totals: 3 of 3 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
      din[9]         Y
      din[8]         Y
    rx_valid         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  din[9]_0              -                             
  Row   2:          1  din[9]_1              (rx_valid && din[8])          
  Row   3:          1  din[8]_0              din[9]                        
  Row   4:          1  din[8]_1              (rx_valid && din[9])          
  Row   5:          1  rx_valid_0            (din[9] && din[8])            
  Row   6:          1  rx_valid_1            (din[9] && din[8])            


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      10        10         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT_RAM_GOLDEN --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_GOLDEN.v
    1                                                module RAM_GOLDEN (clk, rst_n, din, rx_valid, dout, tx_valid);
    2                                                input clk, rst_n, rx_valid;
    3                                                input [9:0] din;
    4                                                output reg tx_valid;
    5                                                output reg [7:0] dout;
    6                                                
    7                                                parameter MEM_DEPTH = 256, ADDR_SIZE = 8;
    8                                                
    9                                                reg [ADDR_SIZE-1 :0] mem [MEM_DEPTH-1 :0];
    10                                               
    11                                               reg [ADDR_SIZE - 1 : 0] wr_address, rd_address;
    12              1                       7177     always @(posedge clk) begin
    13                                                   if(!rst_n) begin
    14              1                        295           dout <= 0;
    15              1                        295           wr_address <= 0;
    16              1                        295           rd_address <= 0;
    17              1                        295           tx_valid <= 0;
    18                                                   end
    19                                                   else begin
    20                                                       if(rx_valid) begin
    21                                                           case ({din[9:8]})
    22                                                               2'b00: begin
    23              1                        251                       wr_address <= din[7:0];
    24                                                               end
    25                                                               2'b01: begin
    26              1                        197                       mem[wr_address] <= din[7:0];
    27                                                               end
    28                                                               2'b10: begin
    29              1                        163                       rd_address <= din[7:0];
    30                                                               end
    31                                                               2'b11: begin
    32              1                        337                       dout <= mem[rd_address];
    33                                                               end
    34                                                           endcase
    35                                                       end
    36              1                       6882             tx_valid <= (din[9] && din[8] && rx_valid)? 1'b1 : 1'b0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         76        76         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT_RAM_GOLDEN --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 
                                          din[0-9]           1           1      100.00 
                                         dout[7-0]           1           1      100.00 
                                   rd_address[7-0]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                          tx_valid           1           1      100.00 
                                   wr_address[7-0]           1           1      100.00 

Total Node Count     =         38 
Toggled Node Count   =         38 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (76 of 76 bins)

=================================================================================
=== Instance: /top
=== Design Unit: work.top
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      16        16         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File top.sv
    5                                                module top();
    6                                                  logic clk;
    7                                                  initial begin
    8               1                          1         clk = 0;
    9               1                          1         forever #5 clk = ~clk;
    9               2                      30003     
    9               3                      30002     
    10                                                 end
    11                                               
    12                                                 //Interface
    13                                                 SPI_if inter(clk);
    14                                                 SPI_SLAVE_if inter_slave(clk);
    15                                                 RAM_if inter_ram(clk);
    16                                                 
    17                                                 /*SPI Wrapper*/
    18                                               
    19                                                 //DUT
    20                                                 //module SPI_Wrapper (input clk,rst_n,SS_n,MOSI, output MISO);
    21                                                 SPI_Wrapper #(inter.MEM_DEPTH, inter.ADDR_SIZE) DUT(inter.clk, inter.rst_n, inter.SS_n, inter.MOSI, inter.MISO);
    22                                               
    23                                                 //GOLDEN
    24                                                 //module SPI_Wrapper_GOLDEN (input clk,rst_n,SS_n,MOSI, output MISO);
    25                                                 SPI_Wrapper_GOLDEN #(inter.MEM_DEPTH, inter.ADDR_SIZE) DUT_GOLDEN(inter.clk, inter.rst_n, inter.SS_n, inter.MOSI, inter.MISO_GOLDEN);
    26                                               
    27                                               
    28                                                 /*SPI SLAVE*/
    29                                               
    30                                                 //DUT
    31                                                 //module SPI_SLAVE (MOSI,SS_n,clk,rst_n,rx_data,tx_valid,tx_data,MISO,rx_valid);
    32                                                 SPI_SLAVE DUT_SPI_SLAVE(inter_slave.MOSI, inter_slave.SS_n, inter_slave.clk, inter_slave.rst_n, inter_slave.rx_data,
    33                                                                         inter_slave.tx_valid, inter_slave.tx_data, inter_slave.MISO, inter_slave.rx_valid);
    34                                               
    35                                                 //GOLDEN
    36                                                 //module SPI_SLAVE_GOLDEN (MOSI,SS_n,clk,rst_n,rx_data,tx_valid,tx_data,MISO,rx_valid);
    37                                                 SPI_SLAVE_GOLDEN DUT_SPI_SLAVE_GOLDEN(inter_slave.MOSI, inter_slave.SS_n, inter_slave.clk, inter_slave.rst_n, inter_slave.rx_data_ref,
    38                                                                                       inter_slave.tx_valid, inter_slave.tx_data, inter_slave.MISO_ref, inter_slave.rx_valid_ref);
    39              1                        583       assign inter_slave.rst_n    = DUT.rst_n;
    40              1                       6677       assign inter_slave.MOSI     = DUT.MOSI;
    41              1                       1998       assign inter_slave.SS_n     = DUT.SS_n;
    42              1                        342       assign inter_slave.tx_valid = DUT.tx_valid;
    43              1                        245       assign inter_slave.tx_data  = DUT.tx_data_dout;
    44                                               
    45                                               
    46                                                 /*RAM*/
    47                                               
    48                                                 //DUT
    49                                                 //module RAM (din,clk,rst_n,rx_valid,dout,tx_valid);
    50                                                 RAM DUT_RAM(inter_ram.din, inter_ram.clk, inter_ram.rst_n, inter_ram.rx_valid, inter_ram.dout, inter_ram.tx_valid);
    51                                               
    52                                                 //GOLDEN
    53                                                 //module RAM_GOLDEN (clk, rst_n, din, rx_valid, dout, tx_valid);
    54                                                 RAM_GOLDEN #(inter_ram.MEM_DEPTH, inter_ram.ADDR_SIZE) DUT_RAM_GOLDEN(inter_ram.clk, inter_ram.rst_n, inter_ram.din,
    55                                                              inter_ram.rx_valid, inter_ram.dout_ref, inter_ram.tx_valid_ref);
    56              1                        583       assign inter_ram.rst_n     = DUT.rst_n;
    57              1                       5121       assign inter_ram.din       = DUT.rx_data_din;
    58              1                       1576       assign inter_ram.rx_valid  = DUT.rx_valid;
    59                                               
    60                                                 
    61                                                 //sva
    62                                                 bind SPI_Wrapper SPI_sva Wrapper_BINDING(inter.clk, inter.rst_n, inter.SS_n, inter.MOSI, inter.MISO);
    63                                                 bind RAM RAM_sva RAM_BINDING(inter_ram.din, inter_ram.clk, inter_ram.rst_n, inter_ram.rx_valid, inter_ram.dout, inter_ram.tx_valid);
    64                                                 
    65                                                 initial begin
    66              1                          1         uvm_config_db #(virtual SPI_if)::set(null, "uvm_test_top", "SPI_IF", inter);
    67              1                          1         uvm_config_db #(virtual SPI_SLAVE_if)::set(null, "uvm_test_top", "SPI_SLAVE_IF", inter_slave);
    68              1                          1         uvm_config_db #(virtual RAM_if)::set(null, "uvm_test_top", "RAM_IF", inter_ram);
    69              1                          1         run_test("SPI_test");

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          2         2         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

=================================================================================
=== Instance: /SPI_seq_item_pkg
=== Design Unit: work.SPI_seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        24        16         8    66.66%

================================Branch Details================================

Branch Coverage for instance /SPI_seq_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_seq_item.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***             `uvm_object_utils(SPI_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                      15001     Count coming in to IF
    7               2                    ***0***             `uvm_object_utils(SPI_seq_item)
                                           15001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***             `uvm_object_utils(SPI_seq_item)
    7               4                    ***0***             `uvm_object_utils(SPI_seq_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                      15001     Count coming in to IF
    7               5                    ***0***             `uvm_object_utils(SPI_seq_item)
                                           15001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***             `uvm_object_utils(SPI_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    68                                     15000     Count coming in to IF
    68              1                        998                 if (SS_n_prev && !SS_n)
                                           14002     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    72                                     15000     Count coming in to IF
    72              1                      14002                 if (!SS_n) begin
                                             998     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    75                                     14002     Count coming in to IF
    75              1                        996                     if (bit_index > 10)
                                           13006     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    87                                     15000     Count coming in to IF
    87              1                      10331                 if (array_rand[0:2] inside {WR_ADDR, WR_DATA, RD_ADDR})
                                            4669     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    89                                     15000     Count coming in to IF
    89              1                        794                 if (counter_allcases == 13)
                                           14206     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    95                                     10000     Count coming in to IF
    95              1                       4669                 if (array_rand[0:2] inside {RD_DATA})
                                            5331     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    97                                     10000     Count coming in to IF
    97              1                        203                 if (counter_read == 23)
                                            9797     All False Count
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       7         5         2    71.42%

================================Condition Details================================

Condition Coverage for instance /SPI_seq_item_pkg --

  File SPI_seq_item.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       68 Item    1  (SS_n_prev && ~this.SS_n)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
   SS_n_prev         Y
   this.SS_n         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  SS_n_prev_0           -                             
  Row   2:          1  SS_n_prev_1           ~this.SS_n                    
  Row   3:          1  this.SS_n_0           SS_n_prev                     
  Row   4:          1  this.SS_n_1           SS_n_prev                     

----------------Focused Condition View-------------------
Line       75 Item    1  (this.bit_index > 10)
Condition totals: 1 of 1 input term covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  (this.bit_index > 10)         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  (this.bit_index > 10)_0  -                             
  Row   2:          1  (this.bit_index > 10)_1  -                             

----------------Focused Condition View-------------------
Line       89 Item    1  (counter_allcases == 13)
Condition totals: 1 of 1 input term covered = 100.00%

                Input Term   Covered  Reason for no coverage   Hint
               -----------  --------  -----------------------  --------------
  (counter_allcases == 13)         Y

     Rows:       Hits  FEC Target                  Non-masking condition(s)      
 ---------  ---------  --------------------        -------------------------     
  Row   1:          1  (counter_allcases == 13)_0  -                             
  Row   2:          1  (counter_allcases == 13)_1  -                             

----------------Focused Condition View-------------------
Line       97 Item    1  (counter_read == 23)
Condition totals: 1 of 1 input term covered = 100.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (counter_read == 23)         Y

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (counter_read == 23)_0  -                             
  Row   2:          1  (counter_read == 23)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      22        14         8    63.63%

================================Statement Details================================

Statement Coverage for instance /SPI_seq_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_seq_item.sv
    1                                                package SPI_seq_item_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import SPI_pkg::*;
    5                                                
    6                                                    class SPI_seq_item extends uvm_sequence_item;
    7               1                    ***0***             `uvm_object_utils(SPI_seq_item)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                      15001     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                      15001     
    7              10                    ***0***     
    8                                                
    9                                                        //Inputs
    10                                                       rand logic rst_n, SS_n, MOSI;
    11                                                       //Outputs
    12                                                       logic MISO;
    13                                                       //Outputs Golden
    14                                                       logic MISO_GOLDEN;
    15                                                       //array to help in MOSI randomization
    16                                                       rand bit [0:10] array_rand;
    17                                                       //Saving the last operation
    18                                                       op_e old_operation;
    19                                                       //array index to drive MOSI bit by bit
    20              1                      30008             int bit_index = 0; 
    21                                               
    22                                               
    23                                                       //Constraints
    24                                                       //RESET
    25                                                       constraint reset {rst_n dist {0:/2, 1:/98};}
    26                                               
    27                                                       //SS_n_high
    28                                                       constraint SS_n_high {
    29                                                           if ((array_rand[0:2] inside {WR_ADDR, WR_DATA, RD_ADDR} && counter_allcases % 13 != 0)     //SS_n = 1 every 13 cycles
    30                                                            || (array_rand[0:2] inside {RD_DATA} && counter_read % 23 != 0))                          //SS_n = 1 every 23 cycles
    31                                                               SS_n==0;
    32                                                           else 
    33                                                               SS_n==1;
    34                                                       }
    35                                               
    36                                                       //Write only
    37                                                       constraint wr_only_constraint {
    38                                                           // Always constrain to write operations (address or data)
    39                                                           array_rand[0:2] inside {WR_ADDR, WR_DATA};
    40                                                       }
    41                                               
    42                                                       //Read only
    43                                                       constraint rd_only_constraint { 
    44                                                           // Always constrain to read operations sequentially (address then data then address then ..etc)
    45                                                           if(old_operation == RD_ADDR)
    46                                                               array_rand[0:2] == RD_DATA;
    47                                                           else if (old_operation == RD_DATA)
    48                                                               array_rand[0:2] == RD_ADDR;
    49                                                           else
    50                                                               array_rand[0:2] inside {RD_ADDR, RD_DATA};
    51                                                       }
    52                                               
    53                                                       //Write and Read
    54                                                       constraint rd_wr_constraint {
    55                                                           if(old_operation == WR_ADDR) //Write_address
    56                                                               array_rand[0:2] inside {WR_ADDR, WR_DATA};         // write_address or write_data 
    57                                                           else if (old_operation == WR_DATA) //write_data
    58                                                               array_rand[0:2] dist {RD_ADDR:/ 60, WR_ADDR:/ 40}; // read_address = 60%, write_address = 40%
    59                                                           else if (old_operation == RD_ADDR) // Read_address
    60                                                               array_rand[0:2] == RD_DATA; //read_data
    61                                                           else // Read_data
    62                                                               array_rand[0:2] dist {WR_ADDR:/ 60, RD_ADDR:/ 40}; // Write Address = 60%, Read Address = 40%
    63                                                       }
    64                                               
    65                                               
    66                                                       function void post_randomize;
    67                                                           // Start of a new frame when SS_n goes low
    68                                                           if (SS_n_prev && !SS_n)
    69              1                        998                     bit_index = -1; // will be incremented to 0 in the next step (don't drive MOSI in the same cycle SS_n goes low(IDLE -> CHK_CMD))
    70                                               
    71                                                           // While SS_n is low -> drive MOSI bit-by-bit
    72                                                           if (!SS_n) begin
    73              1                      14002                     MOSI = array_rand[bit_index];
    74              1                      14002                     bit_index++;
    75                                                               if (bit_index > 10)
    76              1                        996                         bit_index = 0; // wrap after full frame
    77                                                           end
    78                                               
    79                                                           // update operation tracking
    80              1                      15000                 old_operation = op_e'(array_rand[0:2]);
    81              1                      15000                 SS_n_prev = SS_n;
    82                                                       endfunction
    83                                               
    84                                               
    85                                                       function void update_counter_allcases;
    86                                                           //Only increment counter when valid
    87                                                           if (array_rand[0:2] inside {WR_ADDR, WR_DATA, RD_ADDR})
    88              1                      10331                     counter_allcases++;
    89                                                           if (counter_allcases == 13)
    90              1                        794                     counter_allcases = 0;
    91                                                       endfunction
    92                                               
    93                                                       function void update_counter_read;
    94                                                           //Only increment counter when valid
    95                                                           if (array_rand[0:2] inside {RD_DATA})
    96              1                       4669                     counter_read++;
    97                                                           if (counter_read == 23)
    98              1                        203                     counter_read = 0;
    99                                                       endfunction 
    100                                              
    101                                                      function new(string name = "SPI_seq_item");
    102             1                      30008                 super.new(name);


=================================================================================
=== Instance: /SPI_wr_rd_sequence_pkg
=== Design Unit: work.SPI_wr_rd_sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/SPI_wr_rd_sequence_pkg/SPI_wr_rd_sequence/body/#ublk#82182855#19/immed__36
                     SPI_wr_rd_sequence.sv(36)          0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        12         4         8    33.33%

================================Branch Details================================

Branch Coverage for instance /SPI_wr_rd_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_wr_rd_sequence.sv
------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               1                    ***0***             `uvm_object_utils(SPI_wr_rd_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               2                    ***0***             `uvm_object_utils(SPI_wr_rd_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               3                    ***0***             `uvm_object_utils(SPI_wr_rd_sequence)
    8               4                    ***0***             `uvm_object_utils(SPI_wr_rd_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               5                    ***0***             `uvm_object_utils(SPI_wr_rd_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               6                    ***0***             `uvm_object_utils(SPI_wr_rd_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    22                                      5000     Count coming in to IF
    22              1                        336                 if(counter_allcases == 0 && (seq_item.array_rand[0:2] inside {WR_ADDR, WR_DATA, RD_ADDR})
    29              1                       4664                 else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       6         4         2    66.66%

================================Condition Details================================

Condition Coverage for instance /SPI_wr_rd_sequence_pkg --

  File SPI_wr_rd_sequence.sv
----------------Focused Condition View-------------------
Line       8 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       8 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       22 Item    1  (((counter_allcases == 0) && this.seq_item.array_rand[0:2] inside {WR_ADDR,WR_DATA,RD_ADDR}) || ((counter_read == 0) && this.seq_item.array_rand[0:2] inside {RD_DATA}))
Condition totals: 4 of 4 input terms covered = 100.00%

                                                        Input Term   Covered  Reason for no coverage   Hint
                                                       -----------  --------  -----------------------  --------------
                                           (counter_allcases == 0)         Y
  (this.seq_item.array_rand[0:2] inside {WR_ADDR,WR_DATA,RD_ADDR})         Y
                                               (counter_read == 0)         Y
                  (this.seq_item.array_rand[0:2] inside {RD_DATA})         Y

     Rows:       Hits  FEC Target                                                          Non-masking condition(s)      
 ---------  ---------  --------------------                                                -------------------------     
  Row   1:          1  (counter_allcases == 0)_0                                           ~((counter_read == 0) && this.seq_item.array_rand[0:2] inside {RD_DATA})
  Row   2:          1  (counter_allcases == 0)_1                                           (this.seq_item.array_rand[0:2] inside {WR_ADDR,WR_DATA,RD_ADDR})
  Row   3:          1  (this.seq_item.array_rand[0:2] inside {WR_ADDR,WR_DATA,RD_ADDR})_0  (~((counter_read == 0) && this.seq_item.array_rand[0:2] inside {RD_DATA}) && (counter_allcases == 0))
  Row   4:          1  (this.seq_item.array_rand[0:2] inside {WR_ADDR,WR_DATA,RD_ADDR})_1  (counter_allcases == 0)       
  Row   5:          1  (counter_read == 0)_0                                               ~((counter_allcases == 0) && this.seq_item.array_rand[0:2] inside {WR_ADDR,WR_DATA,RD_ADDR})
  Row   6:          1  (counter_read == 0)_1                                               (~((counter_allcases == 0) && this.seq_item.array_rand[0:2] inside {WR_ADDR,WR_DATA,RD_ADDR}) && (this.seq_item.array_rand[0:2] inside {RD_DATA}))
  Row   7:          1  (this.seq_item.array_rand[0:2] inside {RD_DATA})_0                  (~((counter_allcases == 0) && this.seq_item.array_rand[0:2] inside {WR_ADDR,WR_DATA,RD_ADDR}) && (counter_read == 0))
  Row   8:          1  (this.seq_item.array_rand[0:2] inside {RD_DATA})_1                  (~((counter_allcases == 0) && this.seq_item.array_rand[0:2] inside {WR_ADDR,WR_DATA,RD_ADDR}) && (counter_read == 0))


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      25        17         8    68.00%

================================Statement Details================================

Statement Coverage for instance /SPI_wr_rd_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_wr_rd_sequence.sv
    1                                                package SPI_wr_rd_sequence_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import SPI_seq_item_pkg::*;
    5                                                    import SPI_pkg::*;
    6                                                
    7                                                    class SPI_wr_rd_sequence extends uvm_sequence #(SPI_seq_item);
    8               1                    ***0***             `uvm_object_utils(SPI_wr_rd_sequence)
    8               2                    ***0***     
    8               3                    ***0***     
    8               4                    ***0***     
    8               5                    ***0***     
    8               6                          1     
    8               7                    ***0***     
    8               8                    ***0***     
    8               9                          1     
    8              10                    ***0***     
    9                                                
    10                                                       SPI_seq_item seq_item;
    11                                               
    12                                                       function new(string name = "SPI_wr_rd_sequence");
    13              1                          1                 super.new(name);
    14                                                       endfunction
    15                                               
    16                                                   task body();
    17              1                          1             seq_item = SPI_seq_item::type_id::create("seq_item");
    18                                                       //Write and Read
    19              1                       5000             repeat(5000) begin
    20              1                       5000                 start_item(seq_item);
    21                                                           //At the beginning of the operation, enable the read/write sequence and randomization
    22                                                           if(counter_allcases == 0 && (seq_item.array_rand[0:2] inside {WR_ADDR, WR_DATA, RD_ADDR})
    23                                                           || counter_read == 0 && (seq_item.array_rand[0:2] inside {RD_DATA})) begin
    24              1                        336                     seq_item.wr_only_constraint.constraint_mode(0);
    25              1                        336                     seq_item.rd_only_constraint.constraint_mode(0);
    26              1                        336                     seq_item.rd_wr_constraint.constraint_mode(1);
    27              1                        336                     seq_item.array_rand.rand_mode(1);
    28                                                           end
    29                                                           else begin
    30                                                               //Disable all constraints and randomization because we are already in an operation
    31              1                       4664                     seq_item.wr_only_constraint.constraint_mode(0);
    32              1                       4664                     seq_item.rd_only_constraint.constraint_mode(0);
    33              1                       4664                     seq_item.rd_wr_constraint.constraint_mode(0);
    34              1                       4664                     seq_item.array_rand.rand_mode(0);
    35                                                           end
    36                                                           assert (seq_item.randomize());
    37                                                           //Increment counters, the function itself checks if it is valid to increment or not
    38              1                       5000                 seq_item.update_counter_allcases;
    39              1                       5000                 seq_item.update_counter_read;
    40              1                       5000                 finish_item(seq_item);


=================================================================================
=== Instance: /SPI_rd_only_sequence_pkg
=== Design Unit: work.SPI_rd_only_sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/SPI_rd_only_sequence_pkg/SPI_rd_only_sequence/body/#ublk#266676679#19/immed__36
                     SPI_rd_only_sequence.sv(36)
                                                        0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        12         4         8    33.33%

================================Branch Details================================

Branch Coverage for instance /SPI_rd_only_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_rd_only_sequence.sv
------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               1                    ***0***             `uvm_object_utils(SPI_rd_only_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               2                    ***0***             `uvm_object_utils(SPI_rd_only_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               3                    ***0***             `uvm_object_utils(SPI_rd_only_sequence)
    8               4                    ***0***             `uvm_object_utils(SPI_rd_only_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               5                    ***0***             `uvm_object_utils(SPI_rd_only_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               6                    ***0***             `uvm_object_utils(SPI_rd_only_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    22                                      5000     Count coming in to IF
    22              1                        278                 if(counter_allcases == 0 && (seq_item.array_rand[0:2] inside {WR_ADDR, WR_DATA, RD_ADDR})
    29              1                       4722                 else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       6         4         2    66.66%

================================Condition Details================================

Condition Coverage for instance /SPI_rd_only_sequence_pkg --

  File SPI_rd_only_sequence.sv
----------------Focused Condition View-------------------
Line       8 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       8 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       22 Item    1  (((counter_allcases == 0) && this.seq_item.array_rand[0:2] inside {WR_ADDR,WR_DATA,RD_ADDR}) || ((counter_read == 0) && this.seq_item.array_rand[0:2] inside {RD_DATA}))
Condition totals: 4 of 4 input terms covered = 100.00%

                                                        Input Term   Covered  Reason for no coverage   Hint
                                                       -----------  --------  -----------------------  --------------
                                           (counter_allcases == 0)         Y
  (this.seq_item.array_rand[0:2] inside {WR_ADDR,WR_DATA,RD_ADDR})         Y
                                               (counter_read == 0)         Y
                  (this.seq_item.array_rand[0:2] inside {RD_DATA})         Y

     Rows:       Hits  FEC Target                                                          Non-masking condition(s)      
 ---------  ---------  --------------------                                                -------------------------     
  Row   1:          1  (counter_allcases == 0)_0                                           ~((counter_read == 0) && this.seq_item.array_rand[0:2] inside {RD_DATA})
  Row   2:          1  (counter_allcases == 0)_1                                           (this.seq_item.array_rand[0:2] inside {WR_ADDR,WR_DATA,RD_ADDR})
  Row   3:          1  (this.seq_item.array_rand[0:2] inside {WR_ADDR,WR_DATA,RD_ADDR})_0  (~((counter_read == 0) && this.seq_item.array_rand[0:2] inside {RD_DATA}) && (counter_allcases == 0))
  Row   4:          1  (this.seq_item.array_rand[0:2] inside {WR_ADDR,WR_DATA,RD_ADDR})_1  (counter_allcases == 0)       
  Row   5:          1  (counter_read == 0)_0                                               ~((counter_allcases == 0) && this.seq_item.array_rand[0:2] inside {WR_ADDR,WR_DATA,RD_ADDR})
  Row   6:          1  (counter_read == 0)_1                                               (~((counter_allcases == 0) && this.seq_item.array_rand[0:2] inside {WR_ADDR,WR_DATA,RD_ADDR}) && (this.seq_item.array_rand[0:2] inside {RD_DATA}))
  Row   7:          1  (this.seq_item.array_rand[0:2] inside {RD_DATA})_0                  (~((counter_allcases == 0) && this.seq_item.array_rand[0:2] inside {WR_ADDR,WR_DATA,RD_ADDR}) && (counter_read == 0))
  Row   8:          1  (this.seq_item.array_rand[0:2] inside {RD_DATA})_1                  (~((counter_allcases == 0) && this.seq_item.array_rand[0:2] inside {WR_ADDR,WR_DATA,RD_ADDR}) && (counter_read == 0))


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      25        17         8    68.00%

================================Statement Details================================

Statement Coverage for instance /SPI_rd_only_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_rd_only_sequence.sv
    1                                                package SPI_rd_only_sequence_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import SPI_seq_item_pkg::*;
    5                                                    import SPI_pkg::*;
    6                                                
    7                                                    class SPI_rd_only_sequence extends uvm_sequence #(SPI_seq_item);
    8               1                    ***0***             `uvm_object_utils(SPI_rd_only_sequence)
    8               2                    ***0***     
    8               3                    ***0***     
    8               4                    ***0***     
    8               5                    ***0***     
    8               6                          1     
    8               7                    ***0***     
    8               8                    ***0***     
    8               9                          1     
    8              10                    ***0***     
    9                                                
    10                                                       SPI_seq_item seq_item;
    11                                               
    12                                                       function new(string name = "SPI_rd_only_sequence");
    13              1                          1                 super.new(name);
    14                                                       endfunction
    15                                               
    16                                                   task body();
    17              1                          1             seq_item = SPI_seq_item::type_id::create("seq_item");
    18                                                       //Read only
    19              1                       5000             repeat(5000) begin
    20              1                       5000                 start_item(seq_item);
    21                                                           //At the beginning of the operation, enable the read sequence and randomization
    22                                                           if(counter_allcases == 0 && (seq_item.array_rand[0:2] inside {WR_ADDR, WR_DATA, RD_ADDR})
    23                                                           || counter_read == 0 && (seq_item.array_rand[0:2] inside {RD_DATA})) begin
    24              1                        278                     seq_item.wr_only_constraint.constraint_mode(0);
    25              1                        278                     seq_item.rd_only_constraint.constraint_mode(1);
    26              1                        278                     seq_item.rd_wr_constraint.constraint_mode(0);            
    27              1                        278                     seq_item.array_rand.rand_mode(1);
    28                                                           end
    29                                                           else begin
    30                                                               //Disable all constraints and randomization because we are already in an operation
    31              1                       4722                     seq_item.wr_only_constraint.constraint_mode(0);
    32              1                       4722                     seq_item.rd_only_constraint.constraint_mode(0);
    33              1                       4722                     seq_item.rd_wr_constraint.constraint_mode(0);            
    34              1                       4722                     seq_item.array_rand.rand_mode(0);
    35                                                           end
    36                                                           assert (seq_item.randomize());
    37              1                       5000                 seq_item.update_counter_allcases;
    38              1                       5000                 seq_item.update_counter_read;
    39              1                       5000                 finish_item(seq_item);


=================================================================================
=== Instance: /SPI_wr_only_sequence_pkg
=== Design Unit: work.SPI_wr_only_sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/SPI_wr_only_sequence_pkg/SPI_wr_only_sequence/body/#ublk#31795623#19/immed__35
                     SPI_wr_only_sequence.sv(35)
                                                        0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        12         4         8    33.33%

================================Branch Details================================

Branch Coverage for instance /SPI_wr_only_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_wr_only_sequence.sv
------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               1                    ***0***             `uvm_object_utils(SPI_wr_only_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               2                    ***0***             `uvm_object_utils(SPI_wr_only_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               3                    ***0***             `uvm_object_utils(SPI_wr_only_sequence)
    8               4                    ***0***             `uvm_object_utils(SPI_wr_only_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               5                    ***0***             `uvm_object_utils(SPI_wr_only_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               6                    ***0***             `uvm_object_utils(SPI_wr_only_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    22                                      5000     Count coming in to IF
    22              1                        385                 if(counter_allcases == 0) begin
    28              1                       4615                 else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       3         1         2    33.33%

================================Condition Details================================

Condition Coverage for instance /SPI_wr_only_sequence_pkg --

  File SPI_wr_only_sequence.sv
----------------Focused Condition View-------------------
Line       8 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       8 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       22 Item    1  (counter_allcases == 0)
Condition totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (counter_allcases == 0)         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (counter_allcases == 0)_0  -                             
  Row   2:          1  (counter_allcases == 0)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      24        16         8    66.66%

================================Statement Details================================

Statement Coverage for instance /SPI_wr_only_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_wr_only_sequence.sv
    1                                                package SPI_wr_only_sequence_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import SPI_seq_item_pkg::*;
    5                                                    import SPI_pkg::*;
    6                                                
    7                                                    class SPI_wr_only_sequence extends uvm_sequence #(SPI_seq_item);
    8               1                    ***0***             `uvm_object_utils(SPI_wr_only_sequence)
    8               2                    ***0***     
    8               3                    ***0***     
    8               4                    ***0***     
    8               5                    ***0***     
    8               6                          1     
    8               7                    ***0***     
    8               8                    ***0***     
    8               9                          1     
    8              10                    ***0***     
    9                                                
    10                                                       SPI_seq_item seq_item;
    11                                               
    12                                                       function new(string name = "SPI_wr_only_sequence");
    13              1                          1                 super.new(name);
    14                                                       endfunction
    15                                               
    16                                                   task body();
    17              1                          1             seq_item = SPI_seq_item::type_id::create("seq_item");
    18                                                       //Write only
    19              1                       5000             repeat(5000) begin
    20              1                       5000                 start_item(seq_item);
    21                                                           //At the beginning of the operation, enable the write sequence and randomization
    22                                                           if(counter_allcases == 0) begin
    23              1                        385                     seq_item.array_rand.rand_mode(1);
    24              1                        385                     seq_item.wr_only_constraint.constraint_mode(1);
    25              1                        385                     seq_item.rd_only_constraint.constraint_mode(0);
    26              1                        385                     seq_item.rd_wr_constraint.constraint_mode(0);
    27                                                           end
    28                                                           else begin
    29                                                               //Disable all constraints and randomization because we are already in an operation
    30              1                       4615                     seq_item.wr_only_constraint.constraint_mode(0);
    31              1                       4615                     seq_item.rd_only_constraint.constraint_mode(0);
    32              1                       4615                     seq_item.rd_wr_constraint.constraint_mode(0);
    33              1                       4615                     seq_item.array_rand.rand_mode(0);
    34                                                           end
    35                                                           assert (seq_item.randomize());
    36              1                       5000                 seq_item.update_counter_allcases;
    37              1                       5000                 finish_item(seq_item);


=================================================================================
=== Instance: /SPI_reset_sequence_pkg
=== Design Unit: work.SPI_reset_sequence_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /SPI_reset_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_reset_sequence.sv
------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               1                    ***0***             `uvm_object_utils(SPI_reset_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               2                    ***0***             `uvm_object_utils(SPI_reset_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               3                    ***0***             `uvm_object_utils(SPI_reset_sequence)
    8               4                    ***0***             `uvm_object_utils(SPI_reset_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               5                    ***0***             `uvm_object_utils(SPI_reset_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               6                    ***0***             `uvm_object_utils(SPI_reset_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /SPI_reset_sequence_pkg --

  File SPI_reset_sequence.sv
----------------Focused Condition View-------------------
Line       8 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       8 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17         9         8    52.94%

================================Statement Details================================

Statement Coverage for instance /SPI_reset_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_reset_sequence.sv
    1                                                package SPI_reset_sequence_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import SPI_seq_item_pkg::*;
    5                                                    import SPI_pkg::*;
    6                                                
    7                                                    class SPI_reset_sequence extends uvm_sequence #(SPI_seq_item);
    8               1                    ***0***             `uvm_object_utils(SPI_reset_sequence)
    8               2                    ***0***     
    8               3                    ***0***     
    8               4                    ***0***     
    8               5                    ***0***     
    8               6                          1     
    8               7                    ***0***     
    8               8                    ***0***     
    8               9                          1     
    8              10                    ***0***     
    9                                                
    10                                                       SPI_seq_item seq_item;
    11                                               
    12                                                       function new(string name = "SPI_reset_sequence");
    13              1                          1                 super.new(name);
    14                                                       endfunction
    15                                               
    16                                                       task body;
    17              1                          1                 seq_item = SPI_seq_item::type_id::create("seq_item");
    18              1                          1                 start_item(seq_item);
    19              1                          1                 seq_item.rst_n = 0;
    20              1                          1                 seq_item.SS_n=0;
    21              1                          1                 seq_item.MOSI=0;
    22              1                          1                 finish_item(seq_item);            


=================================================================================
=== Instance: /ram_seq_item_pkg
=== Design Unit: work.ram_seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /ram_seq_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_seq_item.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***             `uvm_object_utils(ram_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               2                    ***0***             `uvm_object_utils(ram_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***             `uvm_object_utils(ram_seq_item)
    7               4                    ***0***             `uvm_object_utils(ram_seq_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               5                    ***0***             `uvm_object_utils(ram_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***             `uvm_object_utils(ram_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /ram_seq_item_pkg --

  File RAM_seq_item.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /ram_seq_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_seq_item.sv
    1                                                package ram_seq_item_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import RAM_shared_pkg::*;
    5                                                
    6                                                    class ram_seq_item extends uvm_sequence_item;
    7               1                    ***0***             `uvm_object_utils(ram_seq_item)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                    ***0***     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                    ***0***     
    7              10                    ***0***     
    8                                                        //Inputs
    9                                                        logic rst_n, rx_valid;
    10                                                       logic [9:0] din;
    11                                                       //Outputs
    12                                                       logic tx_valid, tx_valid_ref;
    13                                                       logic [7:0] dout, dout_ref;
    14                                               
    15                                                       function new(string name = "ram_seq_item");
    16              1                      15002                 super.new(name);


=================================================================================
=== Instance: /spi_slave_seq_item_package
=== Design Unit: work.spi_slave_seq_item_package
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /spi_slave_seq_item_package

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_SLAVE_seq_item.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***         `uvm_object_utils(spi_slave_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               2                    ***0***         `uvm_object_utils(spi_slave_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***         `uvm_object_utils(spi_slave_seq_item)
    7               4                    ***0***         `uvm_object_utils(spi_slave_seq_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               5                    ***0***         `uvm_object_utils(spi_slave_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***         `uvm_object_utils(spi_slave_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /spi_slave_seq_item_package --

  File SPI_SLAVE_seq_item.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /spi_slave_seq_item_package --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_SLAVE_seq_item.sv
    1                                                package spi_slave_seq_item_package;
    2                                                  import uvm_pkg::*;
    3                                                  `include "uvm_macros.svh"
    4                                                  import SPI_SLAVE_shared_pkg::*;
    5                                                
    6                                                  class spi_slave_seq_item extends uvm_sequence_item;
    7               1                    ***0***         `uvm_object_utils(spi_slave_seq_item)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                    ***0***     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                    ***0***     
    7              10                    ***0***     
    8                                                  
    9                                                    //Inputs
    10                                                   logic [7:0] tx_data;
    11                                                   logic  MOSI, SS_n, rst_n, tx_valid;
    12                                                   //Outputs
    13                                                   logic [9:0] rx_data, rx_data_ref;
    14                                                   logic MISO, MISO_ref, rx_valid, rx_valid_ref;
    15                                               
    16                                                   function new(string name= "spi_slave_seq_item");
    17              1                      15002           super.new(name);


=================================================================================
=== Instance: /SPI_coverage_pkg
=== Design Unit: work.SPI_coverage_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      2        na        na   100.00%
        Coverpoints/Crosses         11        na        na        na
            Covergroup Bins         26        26         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /SPI_coverage_pkg/SPI_coverage/cvr_grp_SPI_SLAVE 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    15         15          -                      
    missing/total bins:                                     0         15          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint reciver_data                           100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint SS_n_allcases                          100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint SS_n_read_data                         100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint SS_n                                   100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint mosi                                   100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_mosi_SS_n                             100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/SPI_coverage_pkg::SPI_coverage::cvr_grp_SPI_SLAVE  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    15         15          -                      
    missing/total bins:                                     0         15          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint reciver_data                           100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      5039          1          -    Covered              
        bin auto[1]                                      3010          1          -    Covered              
        bin auto[2]                                      2836          1          -    Covered              
        bin auto[3]                                      4116          1          -    Covered              
    Coverpoint SS_n_allcases                          100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin trans_all_cases                                 1          1          -    Covered              
    Coverpoint SS_n_read_data                         100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin trans_read                                    202          1          -    Covered              
    Coverpoint SS_n                                   100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin SS_n_val                                    14003          1          -    Covered              
    Coverpoint mosi                                   100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        bin write_add                                    2791          1          -    Covered              
        bin write_data                                   1828          1          -    Covered              
        bin read_add                                     1814          1          -    Covered              
        bin read_data                                    1892          1          -    Covered              
        bin mosi_val_low                                 7957          1          -    Covered              
        bin mosi_val_high                                7044          1          -    Covered              
    Cross cross_mosi_SS_n                             100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin SS_n_low_mosi_low                        7427          1          -    Covered              
            bin SS_n_low_mosi_high                       6576          1          -    Covered              
 TYPE /SPI_coverage_pkg/SPI_coverage/cvr_grp_RAM      100.00%        100          -    Covered              
    covered/total bins:                                    11         11          -                      
    missing/total bins:                                     0         11          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint transaction_ordering_cp                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint rx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint tx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_op_rx_cp                              100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_op_tx_cp                              100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/SPI_coverage_pkg::SPI_coverage::cvr_grp_RAM  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    11         11          -                      
    missing/total bins:                                     0         11          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint transaction_ordering_cp                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin all_values                                  15001          1          -    Covered              
        bin wr_data_after_wr_address                       69          1          -    Covered              
        bin rd_data_after_rd_address                      125          1          -    Covered              
        bin full_transition                                 9          1          -    Covered              
    Coverpoint rx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin rx_high                                      2281          1          -    Covered              
    Coverpoint tx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin tx_high                                      1565          1          -    Covered              
    Cross cross_op_rx_cp                              100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <full_transition,rx_high>                   9          1          -    Covered              
            bin <rd_data_after_rd_address,rx_high>        125          1          -    Covered              
            bin <wr_data_after_wr_address,rx_high>         67          1          -    Covered              
            bin <all_values,rx_high>                     2281          1          -    Covered              
    Cross cross_op_tx_cp                              100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin rd_data_tx_high                          1565          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      24        22         2    91.66%

================================Statement Details================================

Statement Coverage for instance /SPI_coverage_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_coverage.sv
    1                                                package SPI_coverage_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import SPI_seq_item_pkg::*;
    5                                                    import spi_slave_seq_item_package::*;
    6                                                    import ram_seq_item_pkg::*;
    7                                                    import SPI_SLAVE_shared_pkg::*;
    8                                                    import RAM_shared_pkg::*;
    9                                                
    10                                                   class SPI_coverage extends uvm_scoreboard;
    11              1                    ***0***             `uvm_component_utils(SPI_coverage)
    11              2                    ***0***     
    11              3                          2     
    12                                               
    13                                                       uvm_analysis_export #(SPI_seq_item)         cov_export_SPI;
    14                                                       uvm_analysis_export #(spi_slave_seq_item)   cov_export_SPI_SLAVE;
    15                                                       uvm_analysis_export #(ram_seq_item)         cov_export_RAM;
    16                                                       uvm_tlm_analysis_fifo #(SPI_seq_item)       cov_fifo_SPI;
    17                                                       uvm_tlm_analysis_fifo #(spi_slave_seq_item) cov_fifo_SPI_SLAVE;
    18                                                       uvm_tlm_analysis_fifo #(ram_seq_item)       cov_fifo_RAM;
    19                                                       SPI_seq_item seq_item_SPI;
    20                                                       spi_slave_seq_item seq_item_SPI_SLAVE;
    21                                                       ram_seq_item seq_item_RAM;
    22                                               
    23                                                       //Covergroups
    24                                                       covergroup cvr_grp_SPI_SLAVE;
    25                                                           reciver_data: coverpoint seq_item_SPI_SLAVE.rx_data[9:8];
    26                                               
    27                                                           SS_n_allcases : coverpoint seq_item_SPI_SLAVE.SS_n {
    28                                                               bins trans_all_cases= (1 => 0[*13] =>1);
    29                                                           }
    30                                               
    31                                                           SS_n_read_data : coverpoint seq_item_SPI_SLAVE.SS_n {
    32                                                               bins trans_read= (1 => 0[*22] => 1) ;
    33                                                           }
    34                                               
    35                                                           SS_n : coverpoint seq_item_SPI_SLAVE.SS_n {bins SS_n_val={0};}
    36                                               
    37                                                           // bins trans_read_data =(1=>0[*23] =>1) iff(seq_item_SPI_SLAVE.rx_data[9:8]==2'b11);bins SS_n_val={0};
    38                                                           mosi: coverpoint seq_item_SPI_SLAVE.MOSI {
    39                                                               bins write_add = (0=>0=>0);
    40                                                               bins write_data = (0=>0=>1);
    41                                                               bins read_add = (1=>1=>0);
    42                                                               bins read_data =(1=>1=>1);
    43                                                               bins mosi_val_low={0};
    44                                                               bins mosi_val_high={1};
    45                                                           }
    46                                               
    47                                                           cross_mosi_SS_n : cross mosi,SS_n {
    48                                                               option.cross_auto_bin_max=0;
    49                                                               bins SS_n_low_mosi_low = binsof(SS_n.SS_n_val) && binsof(mosi.mosi_val_low);
    50                                                               bins SS_n_low_mosi_high = binsof(SS_n.SS_n_val)  && binsof(mosi.mosi_val_high);
    51                                                           }
    52                                               
    53                                                       endgroup
    54                                               
    55                                                       covergroup cvr_grp_RAM;
    56                                                           transaction_ordering_cp: coverpoint seq_item_RAM.din[9:8] {
    57                                                               bins all_values = {[0:3]};
    58                                                               // Bins for specific transitions (They take many cycles to occur, as we have long operations)
    59                                                               bins wr_data_after_wr_address = (0[*14] => 1[*10]);
    60                                                               bins rd_data_after_rd_address = (2[*13] => 3[*10]);
    61                                                               bins full_transition = (0[*14] => 1[*12] => 3 => 2[*13] => 3[*10]);
    62                                                           }
    63                                               
    64                                                           rx_valid_cp: coverpoint seq_item_RAM.rx_valid {
    65                                                               bins rx_high = {1};
    66                                                           }
    67                                               
    68                                                           tx_valid_cp: coverpoint seq_item_RAM.tx_valid {
    69                                                               bins tx_high = {1};
    70                                                           }
    71                                               
    72                                                           //When the sequence bins are hit, cross coverage checks if they hit while rx_valid is high at the same time
    73                                                           cross_op_rx_cp: cross transaction_ordering_cp, rx_valid_cp;
    74                                               
    75                                                           cross_op_tx_cp: cross transaction_ordering_cp, tx_valid_cp {
    76                                                               // Cross bin for read data (3) when tx_valid is high (1)
    77                                                               bins rd_data_tx_high = binsof(transaction_ordering_cp.all_values) intersect {3} && 
    78                                                                                      binsof(tx_valid_cp) intersect {1};
    79                                                               option.cross_auto_bin_max = 0;
    80                                                           }
    81                                               
    82                                                       endgroup
    83                                               
    84                                                       function new(string name = "SPI_coverage", uvm_component parent = null);
    85              1                          1                 super.new(name, parent);
    86                                                           //Create Covergroups
    87              1                          1                 cvr_grp_SPI_SLAVE = new();
    88              1                          1                 cvr_grp_RAM = new();
    89                                                       endfunction
    90                                               
    91                                                       function void build_phase(uvm_phase phase);
    92              1                          1             super.build_phase(phase);
    93              1                          1             cov_export_SPI = new("cov_export_SPI", this);
    94              1                          1             cov_export_SPI_SLAVE = new("cov_export_SPI_SLAVE", this);
    95              1                          1             cov_export_RAM = new("cov_export_RAM", this);
    96              1                          1             cov_fifo_SPI = new("cov_fifo_SPI", this);
    97              1                          1             cov_fifo_SPI_SLAVE = new("cov_fifo_SPI_SLAVE", this);
    98              1                          1             cov_fifo_RAM = new("cov_fifo_RAM", this);
    99                                                       endfunction
    100                                              
    101                                                      function void connect_phase(uvm_phase phase);
    102             1                          1                 super.connect_phase(phase);
    103             1                          1                 cov_export_SPI.connect(cov_fifo_SPI.analysis_export);
    104             1                          1                 cov_export_SPI_SLAVE.connect(cov_fifo_SPI_SLAVE.analysis_export);
    105             1                          1                 cov_export_RAM.connect(cov_fifo_RAM.analysis_export);
    106                                                      endfunction  
    107                                              
    108                                                      task run_phase(uvm_phase phase);
    109             1                          1                 super.run_phase(phase);
    110             1                          1                 forever begin
    111             1                      15002                     cov_fifo_SPI.get(seq_item_SPI);
    112             1                      15001                     cov_fifo_SPI_SLAVE.get(seq_item_SPI_SLAVE);
    113             1                      15001                     cov_fifo_RAM.get(seq_item_RAM);
    114                                                              //Covergroups sample
    115             1                      15001                     cvr_grp_SPI_SLAVE.sample();
    116             1                      15001                     cvr_grp_RAM.sample();


=================================================================================
=== Instance: /SPI_scoreboard_pkg
=== Design Unit: work.SPI_scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        18         5        13    27.77%

================================Branch Details================================

Branch Coverage for instance /SPI_scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_scoreboard.sv
------------------------------------IF Branch------------------------------------
    56                                     15001     Count coming in to IF
    56              1                    ***0***                     if (seq_item_SPI.MISO != seq_item_SPI.MISO_GOLDEN) begin
    62              1                    ***0***                     else if (seq_item_SPI_SLAVE.rx_data != seq_item_SPI_SLAVE.rx_data_ref || seq_item_SPI_SLAVE.rx_valid != seq_item_SPI_SLAVE.rx_valid_ref || seq_item_SPI_SLAVE.MISO != seq_item_SPI_SLAVE.MISO_ref) begin
    68              1                    ***0***                     else if ((seq_item_RAM.dout != seq_item_RAM.dout_ref) || (seq_item_RAM.tx_valid != seq_item_RAM.tx_valid_ref)) begin
    74              1                      15001                     else correct_counter++;
Branch totals: 1 hit of 4 branches = 25.00%

------------------------------------IF Branch------------------------------------
    57                                   ***0***     Count coming in to IF
    57              1                    ***0***                         `uvm_error("ERROR", $sformatf("Error in Wrapper: rst_n=%b, SS_n=%b, MOSI=%b, MISO=%b, MISO_GOLDEN=%b", seq_item_SPI.rst_n, seq_item_SPI.SS_n, seq_item_SPI.MOSI, seq_item_SPI.MISO, seq_item_SPI.MISO_GOLDEN))
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    63                                   ***0***     Count coming in to IF
    63              1                    ***0***                         `uvm_error("ERROR", $sformatf("Error in SPI_SLAVE"))
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    69                                   ***0***     Count coming in to IF
    69              1                    ***0***                         `uvm_error("ERROR", $sformatf("Error in RAM: rst_n=%b, rx_valid=%b, din=%b, tx_valid=%b, tx_valid_ref=%b, dout=%b, dout_ref=%b",
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    80                                         1     Count coming in to IF
    80              1                          1                 `uvm_info("Report Phase", $sformatf("Correct = %d", correct_counter), UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    81                                         1     Count coming in to IF
    81              1                          1                 `uvm_info("Report Phase", $sformatf("SPI Wrapper Errors = %d", error_counter_SPI), UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    82                                         1     Count coming in to IF
    82              1                          1                 `uvm_info("Report Phase", $sformatf("SPI_SLAVE Errors = %d", error_counter_SPI_SLAVE), UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    83                                         1     Count coming in to IF
    83              1                          1                 `uvm_info("Report Phase", $sformatf("RAM Errors = %d", error_counter_RAM), UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       6         0         6     0.00%

================================Condition Details================================

Condition Coverage for instance /SPI_scoreboard_pkg --

  File SPI_scoreboard.sv
----------------Focused Condition View-------------------
Line       56 Item    1  (this.seq_item_SPI.MISO != this.seq_item_SPI.MISO_GOLDEN)
Condition totals: 0 of 1 input term covered = 0.00%

                                                 Input Term   Covered  Reason for no coverage   Hint
                                                -----------  --------  -----------------------  --------------
  (this.seq_item_SPI.MISO != this.seq_item_SPI.MISO_GOLDEN)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                                   Non-masking condition(s)      
 ---------  ---------  --------------------                                         -------------------------     
  Row   1:          1  (this.seq_item_SPI.MISO != this.seq_item_SPI.MISO_GOLDEN)_0  -                             
  Row   2:    ***0***  (this.seq_item_SPI.MISO != this.seq_item_SPI.MISO_GOLDEN)_1  -                             

----------------Focused Condition View-------------------
Line       62 Item    1  ((this.seq_item_SPI_SLAVE.rx_data != this.seq_item_SPI_SLAVE.rx_data_ref) || (this.seq_item_SPI_SLAVE.rx_valid != this.seq_item_SPI_SLAVE.rx_valid_ref) || (this.seq_item_SPI_SLAVE.MISO != this.seq_item_SPI_SLAVE.MISO_ref))
Condition totals: 0 of 3 input terms covered = 0.00%

                                                                  Input Term   Covered  Reason for no coverage   Hint
                                                                 -----------  --------  -----------------------  --------------
    (this.seq_item_SPI_SLAVE.rx_data != this.seq_item_SPI_SLAVE.rx_data_ref)         N  '_1' not hit             Hit '_1'
  (this.seq_item_SPI_SLAVE.rx_valid != this.seq_item_SPI_SLAVE.rx_valid_ref)         N  '_1' not hit             Hit '_1'
          (this.seq_item_SPI_SLAVE.MISO != this.seq_item_SPI_SLAVE.MISO_ref)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                                                    Non-masking condition(s)      
 ---------  ---------  --------------------                                                          -------------------------     
  Row   1:          1  (this.seq_item_SPI_SLAVE.rx_data != this.seq_item_SPI_SLAVE.rx_data_ref)_0    ~((this.seq_item_SPI_SLAVE.rx_valid != this.seq_item_SPI_SLAVE.rx_valid_ref) || (this.seq_item_SPI_SLAVE.MISO != this.seq_item_SPI_SLAVE.MISO_ref))
  Row   2:    ***0***  (this.seq_item_SPI_SLAVE.rx_data != this.seq_item_SPI_SLAVE.rx_data_ref)_1    -                             
  Row   3:          1  (this.seq_item_SPI_SLAVE.rx_valid != this.seq_item_SPI_SLAVE.rx_valid_ref)_0  (~(this.seq_item_SPI_SLAVE.rx_data != this.seq_item_SPI_SLAVE.rx_data_ref) && ~(this.seq_item_SPI_SLAVE.MISO != this.seq_item_SPI_SLAVE.MISO_ref))
  Row   4:    ***0***  (this.seq_item_SPI_SLAVE.rx_valid != this.seq_item_SPI_SLAVE.rx_valid_ref)_1  ~(this.seq_item_SPI_SLAVE.rx_data != this.seq_item_SPI_SLAVE.rx_data_ref)
  Row   5:          1  (this.seq_item_SPI_SLAVE.MISO != this.seq_item_SPI_SLAVE.MISO_ref)_0          (~(this.seq_item_SPI_SLAVE.rx_data != this.seq_item_SPI_SLAVE.rx_data_ref) && ~(this.seq_item_SPI_SLAVE.rx_valid != this.seq_item_SPI_SLAVE.rx_valid_ref))
  Row   6:    ***0***  (this.seq_item_SPI_SLAVE.MISO != this.seq_item_SPI_SLAVE.MISO_ref)_1          (~(this.seq_item_SPI_SLAVE.rx_data != this.seq_item_SPI_SLAVE.rx_data_ref) && ~(this.seq_item_SPI_SLAVE.rx_valid != this.seq_item_SPI_SLAVE.rx_valid_ref))

----------------Focused Condition View-------------------
Line       68 Item    1  ((this.seq_item_RAM.dout != this.seq_item_RAM.dout_ref) || (this.seq_item_RAM.tx_valid != this.seq_item_RAM.tx_valid_ref))
Condition totals: 0 of 2 input terms covered = 0.00%

                                                      Input Term   Covered  Reason for no coverage   Hint
                                                     -----------  --------  -----------------------  --------------
          (this.seq_item_RAM.dout != this.seq_item_RAM.dout_ref)         N  '_1' not hit             Hit '_1'
  (this.seq_item_RAM.tx_valid != this.seq_item_RAM.tx_valid_ref)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                                        Non-masking condition(s)      
 ---------  ---------  --------------------                                              -------------------------     
  Row   1:          1  (this.seq_item_RAM.dout != this.seq_item_RAM.dout_ref)_0          ~(this.seq_item_RAM.tx_valid != this.seq_item_RAM.tx_valid_ref)
  Row   2:    ***0***  (this.seq_item_RAM.dout != this.seq_item_RAM.dout_ref)_1          -                             
  Row   3:          1  (this.seq_item_RAM.tx_valid != this.seq_item_RAM.tx_valid_ref)_0  ~(this.seq_item_RAM.dout != this.seq_item_RAM.dout_ref)
  Row   4:    ***0***  (this.seq_item_RAM.tx_valid != this.seq_item_RAM.tx_valid_ref)_1  ~(this.seq_item_RAM.dout != this.seq_item_RAM.dout_ref)


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      36        28         8    77.77%

================================Statement Details================================

Statement Coverage for instance /SPI_scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_scoreboard.sv
    1                                                package SPI_scoreboard_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import SPI_seq_item_pkg::*;
    5                                                    import spi_slave_seq_item_package::*;
    6                                                    import ram_seq_item_pkg::*;
    7                                                    import SPI_SLAVE_shared_pkg::*;
    8                                                    import RAM_shared_pkg::*;
    9                                                
    10                                                   class SPI_scoreboard extends uvm_scoreboard;
    11              1                    ***0***             `uvm_component_utils(SPI_scoreboard)
    11              2                    ***0***     
    11              3                          2     
    12                                               
    13                                                       uvm_analysis_export #(SPI_seq_item)         sb_export_SPI;
    14                                                       uvm_analysis_export #(spi_slave_seq_item)   sb_export_SPI_SLAVE;
    15                                                       uvm_analysis_export #(ram_seq_item)         sb_export_RAM;
    16                                                       uvm_tlm_analysis_fifo #(SPI_seq_item)       sb_fifo_SPI;
    17                                                       uvm_tlm_analysis_fifo #(spi_slave_seq_item) sb_fifo_SPI_SLAVE;
    18                                                       uvm_tlm_analysis_fifo #(ram_seq_item)       sb_fifo_RAM;
    19                                                       SPI_seq_item seq_item_SPI;
    20                                                       spi_slave_seq_item seq_item_SPI_SLAVE;
    21                                                       ram_seq_item seq_item_RAM;
    22                                               
    23              1                          1             int correct_counter = 0;
    24              1                          1             int error_counter_SPI = 0;
    25              1                          1             int error_counter_SPI_SLAVE = 0;
    26              1                          1             int error_counter_RAM = 0;
    27                                               
    28                                                       function new(string name = "SPI_scoreboard", uvm_component parent = null);
    29              1                          1                 super.new(name, parent);
    30                                                       endfunction
    31                                               
    32                                                       function void build_phase(uvm_phase phase);
    33              1                          1             super.build_phase(phase);
    34              1                          1             sb_export_SPI = new("sb_export_SPI", this);
    35              1                          1             sb_export_SPI_SLAVE = new("sb_export_SPI_SLAVE", this);
    36              1                          1             sb_export_RAM = new("sb_export_RAM", this);
    37              1                          1             sb_fifo_SPI = new("sb_fifo_SPI", this);
    38              1                          1             sb_fifo_SPI_SLAVE = new("sb_fifo_SPI_SLAVE", this);
    39              1                          1             sb_fifo_RAM = new("sb_fifo_RAM", this);
    40                                                       endfunction
    41                                               
    42                                                       function void connect_phase(uvm_phase phase);
    43              1                          1                 super.connect_phase(phase);
    44              1                          1                 sb_export_SPI.connect(sb_fifo_SPI.analysis_export);
    45              1                          1                 sb_export_SPI_SLAVE.connect(sb_fifo_SPI_SLAVE.analysis_export);
    46              1                          1                 sb_export_RAM.connect(sb_fifo_RAM.analysis_export);
    47                                                       endfunction 
    48                                               
    49                                                       task run_phase(uvm_phase phase);
    50              1                          1                 super.run_phase(phase);
    51              1                          1                 forever begin
    52              1                      15002                     sb_fifo_SPI.get(seq_item_SPI);
    53              1                      15001                     sb_fifo_SPI_SLAVE.get(seq_item_SPI_SLAVE);
    54              1                      15001                     sb_fifo_RAM.get(seq_item_RAM);
    55                                               
    56                                                               if (seq_item_SPI.MISO != seq_item_SPI.MISO_GOLDEN) begin
    57              1                    ***0***                         `uvm_error("ERROR", $sformatf("Error in Wrapper: rst_n=%b, SS_n=%b, MOSI=%b, MISO=%b, MISO_GOLDEN=%b", seq_item_SPI.rst_n, seq_item_SPI.SS_n, seq_item_SPI.MOSI, seq_item_SPI.MISO, seq_item_SPI.MISO_GOLDEN))
    58              1                    ***0***                         error_counter_SPI++;
    59                                                               end
    60                                               
    61                                                               //input tx_data, MOSI, SS_n, rst_n, tx_valid, output rx_data, rx_data_ref, MISO, MISO_ref, rx_valid, rx_valid_ref
    62                                                               else if (seq_item_SPI_SLAVE.rx_data != seq_item_SPI_SLAVE.rx_data_ref || seq_item_SPI_SLAVE.rx_valid != seq_item_SPI_SLAVE.rx_valid_ref || seq_item_SPI_SLAVE.MISO != seq_item_SPI_SLAVE.MISO_ref) begin
    63              1                    ***0***                         `uvm_error("ERROR", $sformatf("Error in SPI_SLAVE"))
    64              1                    ***0***                         error_counter_SPI_SLAVE++;
    65                                                               end
    66                                               
    67                                                               //input rst_n, rx_valid, din, output tx_valid, tx_valid_ref, dout, dout_ref
    68                                                               else if ((seq_item_RAM.dout != seq_item_RAM.dout_ref) || (seq_item_RAM.tx_valid != seq_item_RAM.tx_valid_ref)) begin
    69              1                    ***0***                         `uvm_error("ERROR", $sformatf("Error in RAM: rst_n=%b, rx_valid=%b, din=%b, tx_valid=%b, tx_valid_ref=%b, dout=%b, dout_ref=%b",
    70                                                                   seq_item_RAM.rst_n, seq_item_RAM.rx_valid, seq_item_RAM.din, seq_item_RAM.tx_valid, seq_item_RAM.tx_valid_ref, seq_item_RAM.dout, seq_item_RAM.dout_ref))
    71              1                    ***0***                         error_counter_RAM++;
    72                                                               end
    73                                               
    74              1                      15001                     else correct_counter++;
    75                                                           end
    76                                                       endtask
    77                                               
    78                                                       function void report_phase(uvm_phase phase);
    79              1                          1                 super.report_phase(phase);
    80              1                          1                 `uvm_info("Report Phase", $sformatf("Correct = %d", correct_counter), UVM_MEDIUM)
    81              1                          1                 `uvm_info("Report Phase", $sformatf("SPI Wrapper Errors = %d", error_counter_SPI), UVM_MEDIUM)
    82              1                          1                 `uvm_info("Report Phase", $sformatf("SPI_SLAVE Errors = %d", error_counter_SPI_SLAVE), UVM_MEDIUM)
    83              1                          1                 `uvm_info("Report Phase", $sformatf("RAM Errors = %d", error_counter_RAM), UVM_MEDIUM)


=================================================================================
=== Instance: /SPI_config_pkg
=== Design Unit: work.SPI_config_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /SPI_config_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_config.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***             `uvm_object_utils(SPI_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***             `uvm_object_utils(SPI_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***             `uvm_object_utils(SPI_config)
    6               4                    ***0***             `uvm_object_utils(SPI_config)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***             `uvm_object_utils(SPI_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***             `uvm_object_utils(SPI_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /SPI_config_pkg --

  File SPI_config.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /SPI_config_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_config.sv
    1                                                package SPI_config_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                
    5                                                    class SPI_config extends uvm_object;
    6               1                    ***0***             `uvm_object_utils(SPI_config)
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                    ***0***     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                
    8                                                        virtual SPI_if SPI_vif;
    9                                                        virtual SPI_SLAVE_if SPI_SLAVE_vif;
    10                                                       virtual RAM_if RAM_vif;
    11                                                       uvm_active_passive_enum is_active;
    12                                               
    13                                                       function new(string name = "SPI_config");
    14              1                          3                 super.new(name);


=================================================================================
=== Instance: /ram_monitor_pkg
=== Design Unit: work.ram_monitor_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      18        16         2    88.88%

================================Statement Details================================

Statement Coverage for instance /ram_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_monitor.sv
    1                                                package ram_monitor_pkg;
    2                                                import uvm_pkg::*;
    3                                                import ram_seq_item_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                
    6                                                class ram_monitor extends uvm_monitor;
    7               1                    ***0***         `uvm_component_utils(ram_monitor)
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                    ram_seq_item item;
    10                                                   virtual RAM_if ram_vif;
    11                                                   uvm_analysis_port #(ram_seq_item) mon_ap;
    12                                               
    13                                                   function new(string name = "ram_monitor", uvm_component parent = null);
    14              1                          1             super.new(name, parent);
    15                                                   endfunction 
    16                                               
    17                                                   function void build_phase(uvm_phase phase);
    18              1                          1             super.build_phase(phase);
    19              1                          1             mon_ap = new("mon_ap", this);
    20                                                   endfunction
    21                                               
    22                                                   task run_phase(uvm_phase phase);
    23              1                          1             super.run_phase(phase);
    24              1                          1             forever begin
    25              1                      15002                 item = ram_seq_item::type_id::create("item");
    26              1                      15002                 @(negedge ram_vif.clk);
    27                                                           //input rst_n, rx_valid, din, output tx_valid, tx_valid_ref, dout, dout_ref
    28              1                      15001                 item.rst_n        = ram_vif.rst_n;
    29              1                      15001                 item.rx_valid     = ram_vif.rx_valid;
    30              1                      15001                 item.din          = ram_vif.din;
    31              1                      15001                 item.tx_valid     = ram_vif.tx_valid;
    32              1                      15001                 item.tx_valid_ref = ram_vif.tx_valid_ref;
    33              1                      15001                 item.dout         = ram_vif.dout;
    34              1                      15001                 item.dout_ref     = ram_vif.dout_ref;
    35                                               
    36              1                      15001                 mon_ap.write(item);


=================================================================================
=== Instance: /ram_driver_pkg
=== Design Unit: work.ram_driver_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      13         0        13     0.00%

================================Statement Details================================

Statement Coverage for instance /ram_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_driver.sv
    1                                                package ram_driver_pkg;
    2                                                import uvm_pkg::*;
    3                                                import ram_seq_item_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                
    6                                                class ram_driver extends uvm_driver #(ram_seq_item);
    7               1                    ***0***         `uvm_component_utils(ram_driver)
    7               2                    ***0***     
    7               3                    ***0***     
    8                                                    ram_seq_item item;
    9                                                    virtual RAM_if ram_vif;
    10                                               
    11                                                   function new(string name = "drv", uvm_component parent = null);
    12              1                    ***0***             super.new(name, parent);
    13                                                   endfunction 
    14                                               
    15                                                   task run_phase(uvm_phase phase);
    16              1                    ***0***             super.run_phase(phase);
    17              1                    ***0***             forever begin
    18              1                    ***0***                 item = ram_seq_item::type_id::create("item");
    19              1                    ***0***                 seq_item_port.get_next_item(item);
    20              1                    ***0***                 ram_vif.rst_n = item.rst_n;
    21              1                    ***0***                 ram_vif.rx_valid = item.rx_valid;
    22              1                    ***0***                 ram_vif.din = item.din;
    23              1                    ***0***                 @(negedge ram_vif.clk);
    24              1                    ***0***                 seq_item_port.item_done();


=================================================================================
=== Instance: /ram_sqr_pkg
=== Design Unit: work.ram_sqr_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         0         4     0.00%

================================Statement Details================================

Statement Coverage for instance /ram_sqr_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_sqr.sv
    1                                                package ram_sqr_pkg;
    2                                                import uvm_pkg::*;
    3                                                import ram_seq_item_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                
    6                                                class ram_sqr extends uvm_sequencer #(ram_seq_item);
    7               1                    ***0***         `uvm_component_utils(ram_sqr)
    7               2                    ***0***     
    7               3                    ***0***     
    8                                                
    9                                                    function new(string name = "sqr", uvm_component parent = null);
    10              1                    ***0***             super.new(name, parent);


=================================================================================
=== Instance: /ram_agent_pkg
=== Design Unit: work.ram_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /ram_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_agent.sv
------------------------------------IF Branch------------------------------------
    25                                         1     Count coming in to IF
    25              1                    ***0***             if (!uvm_config_db #(SPI_config)::get(this, "", "CONFIG_RAM", cfg))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    26                                   ***0***     Count coming in to IF
    26              1                    ***0***                 `uvm_fatal("build_phase", "unable to get configuration object for RAM agent")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    28                                         1     Count coming in to IF
    28              1                    ***0***             if (cfg.is_active == UVM_ACTIVE) begin   
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    38                                         1     Count coming in to IF
    38              1                    ***0***             if (cfg.is_active == UVM_ACTIVE) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         8         7    53.33%

================================Statement Details================================

Statement Coverage for instance /ram_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_agent.sv
    1                                                package ram_agent_pkg;
    2                                                import uvm_pkg::*;
    3                                                import ram_seq_item_pkg::*;
    4                                                import ram_sqr_pkg::*;
    5                                                import ram_driver_pkg::*;
    6                                                import ram_monitor_pkg::*;
    7                                                import SPI_config_pkg::*;
    8                                                `include "uvm_macros.svh"
    9                                                
    10                                               class ram_agent extends uvm_agent;
    11              1                    ***0***         `uvm_component_utils(ram_agent)
    11              2                    ***0***     
    11              3                          2     
    12                                               
    13                                                   SPI_config cfg;
    14                                                   ram_driver drv;
    15                                                   ram_sqr sqr;
    16                                                   ram_monitor mon;
    17                                                   uvm_analysis_port #(ram_seq_item) agt_ap;
    18                                               
    19                                                   function new(string name = "ram_agent", uvm_component parent = null);
    20              1                          1             super.new(name, parent);
    21                                                   endfunction
    22                                               
    23                                                   function void build_phase(uvm_phase phase);
    24              1                          1             super.build_phase(phase);
    25                                                       if (!uvm_config_db #(SPI_config)::get(this, "", "CONFIG_RAM", cfg))
    26              1                    ***0***                 `uvm_fatal("build_phase", "unable to get configuration object for RAM agent")
    27                                               
    28                                                       if (cfg.is_active == UVM_ACTIVE) begin   
    29              1                    ***0***             sqr = ram_sqr::type_id::create("sqr", this);
    30              1                    ***0***             drv = ram_driver::type_id::create("drv", this);
    31                                                       end
    32              1                          1             mon = ram_monitor::type_id::create("mon", this);
    33              1                          1             agt_ap = new("agt_ap", this);
    34                                                   endfunction
    35                                               
    36                                                   function void connect_phase(uvm_phase phase);
    37              1                          1             super.connect_phase(phase);
    38                                                       if (cfg.is_active == UVM_ACTIVE) begin
    39              1                    ***0***             drv.ram_vif = cfg.RAM_vif;
    40              1                    ***0***             drv.seq_item_port.connect(sqr.seq_item_export);
    41                                                       end
    42              1                          1             mon.ram_vif = cfg.RAM_vif;
    43              1                          1             mon.mon_ap.connect(agt_ap);


=================================================================================
=== Instance: /spi_slave_sequencer_package
=== Design Unit: work.spi_slave_sequencer_package
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         0         4     0.00%

================================Statement Details================================

Statement Coverage for instance /spi_slave_sequencer_package --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_SLAVE_sequencer.sv
    1                                                package spi_slave_sequencer_package ;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import spi_slave_seq_item_package::*;
    5                                                class spi_slave_sequencer extends uvm_sequencer #(spi_slave_seq_item);
    6               1                    ***0***       `uvm_component_utils(spi_slave_sequencer)
    6               2                    ***0***     
    6               3                    ***0***     
    7                                                  function new(string name= "spi_slave_sequencer",uvm_component parent=null);
    8               1                    ***0***         super.new(name,parent);


=================================================================================
=== Instance: /spi_slave_monitor_pkg
=== Design Unit: work.spi_slave_monitor_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      22        20         2    90.90%

================================Statement Details================================

Statement Coverage for instance /spi_slave_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_SLAVE_monitor.sv
    1                                                package spi_slave_monitor_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import spi_slave_seq_item_package::*;
    5                                                    import SPI_SLAVE_shared_pkg ::*;
    6                                                
    7                                                    class spi_slave_monitor extends uvm_monitor;
    8               1                    ***0***             `uvm_component_utils(spi_slave_monitor);
    8               2                    ***0***     
    8               3                          2     
    9                                                
    10                                                       virtual SPI_SLAVE_if ss_vif;
    11                                                       spi_slave_seq_item seq_item;
    12                                                       uvm_analysis_port #(spi_slave_seq_item) mon_ap;
    13                                               
    14                                                       function new(string name ="spi_slave_monitor",uvm_component parent =null);
    15              1                          1                 super.new(name,parent);
    16                                                       endfunction
    17                                               
    18                                                       function void build_phase( uvm_phase phase);
    19              1                          1                 super.build_phase(phase);
    20              1                          1                 mon_ap = new("mon_ap", this);
    21                                                       endfunction
    22                                                       
    23                                                       task run_phase (uvm_phase phase);
    24              1                          1                 super.run_phase(phase);
    25              1                          1                 forever begin
    26              1                      15002                     seq_item=spi_slave_seq_item::type_id::create("seq_item");
    27              1                      15002                     @(negedge ss_vif.clk);
    28                                                               //input tx_data, MOSI, SS_n, rst_n, tx_valid, output rx_data, rx_data_ref, MISO, MISO_ref, rx_valid, rx_valid_ref
    29              1                      15001                     seq_item.rst_n        = ss_vif.rst_n;
    30              1                      15001                     seq_item.MOSI         = ss_vif.MOSI;
    31              1                      15001                     seq_item.SS_n         = ss_vif.SS_n;
    32              1                      15001                     seq_item.MISO         = ss_vif.MISO;
    33              1                      15001                     seq_item.MISO_ref     = ss_vif.MISO_ref;
    34              1                      15001                     seq_item.tx_valid     = ss_vif.tx_valid;
    35              1                      15001                     seq_item.tx_data      = ss_vif.tx_data;
    36              1                      15001                     seq_item.rx_valid     = ss_vif.rx_valid;
    37              1                      15001                     seq_item.rx_data      = ss_vif.rx_data;
    38              1                      15001                     seq_item.rx_valid_ref = ss_vif.rx_valid_ref;
    39              1                      15001                     seq_item.rx_data_ref  = ss_vif.rx_data_ref;
    40                                               
    41              1                      15001                     mon_ap.write(seq_item);


=================================================================================
=== Instance: /spi_slave_driver_pkg
=== Design Unit: work.spi_slave_driver_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         0        15     0.00%

================================Statement Details================================

Statement Coverage for instance /spi_slave_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_SLAVE_driver.sv
    2                                                 package spi_slave_driver_pkg;
    3                                                 import uvm_pkg::*;
    4                                                    `include "uvm_macros.svh"
    5                                                    import spi_slave_seq_item_package::*;
    6                                                    import SPI_SLAVE_shared_pkg ::*;
    7                                                class spi_slave_driver extends uvm_driver #(spi_slave_seq_item);
    8               1                    ***0***      `uvm_component_utils(spi_slave_driver);
    8               2                    ***0***     
    8               3                    ***0***     
    9                                                 virtual SPI_SLAVE_if ss_vif;
    10                                                spi_slave_seq_item seq_item;
    11                                                function new(string name ="spi_slave_driver",uvm_component parent =null);
    12              1                    ***0***         super.new(name,parent);
    13                                                   endfunction
    14                                                   task run_phase(uvm_phase phase);
    15              1                    ***0***         super.run_phase(phase);
    16              1                    ***0***         forever begin 
    17              1                    ***0***           seq_item =  spi_slave_seq_item :: type_id :: create ( "seq_item");
    18              1                    ***0***           seq_item_port.get_next_item(seq_item);
    19              1                    ***0***           ss_vif.rst_n=seq_item.rst_n;
    20              1                    ***0***           ss_vif.SS_n=seq_item.SS_n;
    21              1                    ***0***           ss_vif.MOSI=seq_item.MOSI;
    22              1                    ***0***           ss_vif.tx_valid=seq_item.tx_valid;
    23              1                    ***0***           ss_vif.tx_data=seq_item.tx_data;
    24              1                    ***0***           @(negedge ss_vif.clk);
    25              1                    ***0***           seq_item_port.item_done();


=================================================================================
=== Instance: /spi_slave_agent_pkg
=== Design Unit: work.spi_slave_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /spi_slave_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_SLAVE_agent.sv
------------------------------------IF Branch------------------------------------
    26                                         1     Count coming in to IF
    26              1                    ***0***           if (!uvm_config_db#(SPI_config)::get(this, "", "CONFIG_SPI_SLAVE", s_cfg))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    27                                   ***0***     Count coming in to IF
    27              1                    ***0***             `uvm_fatal("build_phase", "unable to get configuration object for SPI_SLAVE agent")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    29                                         1     Count coming in to IF
    29              1                    ***0***           if (s_cfg.is_active == UVM_ACTIVE) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    39                                         1     Count coming in to IF
    39              1                    ***0***           if (s_cfg.is_active == UVM_ACTIVE) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         8         7    53.33%

================================Statement Details================================

Statement Coverage for instance /spi_slave_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_SLAVE_agent.sv
    1                                                package spi_slave_agent_pkg;
    2                                                  import uvm_pkg::*;
    3                                                  `include "uvm_macros.svh"
    4                                                  import spi_slave_seq_item_package::*;
    5                                                  import SPI_config_pkg::*;
    6                                                  import spi_slave_driver_pkg::*;
    7                                                  import spi_slave_monitor_pkg::*;
    8                                                  import spi_slave_sequencer_package::*;
    9                                                
    10                                                 class spi_slave_agent extends uvm_agent;
    11              1                    ***0***         `uvm_component_utils(spi_slave_agent)
    11              2                    ***0***     
    11              3                          2     
    12                                                     
    13                                                   spi_slave_seq_item seq_item;
    14                                                   SPI_config          s_cfg;
    15                                                   spi_slave_driver       drv;
    16                                                   spi_slave_sequencer sqr;
    17                                                   spi_slave_monitor       mon;
    18                                                   uvm_analysis_port #(spi_slave_seq_item) agt_ap;
    19                                               
    20                                                   function new(string name = "spi_slave_agent", uvm_component parent = null);
    21              1                          1           super.new(name, parent);
    22                                                   endfunction
    23                                               
    24                                                   function void build_phase(uvm_phase phase);
    25              1                          1           super.build_phase(phase);
    26                                                     if (!uvm_config_db#(SPI_config)::get(this, "", "CONFIG_SPI_SLAVE", s_cfg))
    27              1                    ***0***             `uvm_fatal("build_phase", "unable to get configuration object for SPI_SLAVE agent")
    28                                               
    29                                                     if (s_cfg.is_active == UVM_ACTIVE) begin
    30              1                    ***0***             sqr = spi_slave_sequencer::type_id::create("sqr", this);
    31              1                    ***0***             drv = spi_slave_driver::type_id::create("drv", this);
    32                                                     end
    33              1                          1           mon = spi_slave_monitor::type_id::create("mon", this);
    34              1                          1           agt_ap = new("agt_tb",this);
    35                                                   endfunction
    36                                               
    37                                                   function void connect_phase(uvm_phase phase);
    38              1                          1           super.connect_phase(phase);
    39                                                     if (s_cfg.is_active == UVM_ACTIVE) begin
    40              1                    ***0***           drv.ss_vif = s_cfg.SPI_SLAVE_vif;
    41              1                    ***0***           drv.seq_item_port.connect(sqr.seq_item_export);
    42                                                     end
    43              1                          1           mon.ss_vif = s_cfg.SPI_SLAVE_vif;
    44              1                          1           mon.mon_ap.connect(agt_ap);


=================================================================================
=== Instance: /SPI_sequencer_pkg
=== Design Unit: work.SPI_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         2         2    50.00%

================================Statement Details================================

Statement Coverage for instance /SPI_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_sequencer.sv
    1                                                package SPI_sequencer_pkg;
    2                                                  import uvm_pkg::*;
    3                                                  `include "uvm_macros.svh"
    4                                                  import SPI_seq_item_pkg::*;
    5                                                
    6                                                  class SPI_sequencer extends uvm_sequencer #(SPI_seq_item);
    7               1                    ***0***         `uvm_component_utils(SPI_sequencer)
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                    function new(string name = "SPI_sequencer", uvm_component parent = null);
    10              1                          1           super.new(name, parent);


=================================================================================
=== Instance: /SPI_monitor_pkg
=== Design Unit: work.SPI_monitor_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      16        14         2    87.50%

================================Statement Details================================

Statement Coverage for instance /SPI_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_monitor.sv
    1                                                package SPI_monitor_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import SPI_seq_item_pkg::*;
    5                                                    import SPI_pkg::*;
    6                                                
    7                                                    class SPI_monitor extends uvm_monitor;
    8               1                    ***0***             `uvm_component_utils(SPI_monitor)
    8               2                    ***0***     
    8               3                          2     
    9                                                
    10                                                       virtual SPI_if SPI_vif;
    11                                                       SPI_seq_item seq_item;
    12                                                       uvm_analysis_port #(SPI_seq_item) mon_ap;
    13                                               
    14                                                       function new(string name = "SPI_monitor", uvm_component parent = null);
    15              1                          1                 super.new(name, parent);
    16                                                       endfunction
    17                                               
    18                                                       function void build_phase(uvm_phase phase);
    19              1                          1             super.build_phase(phase);
    20              1                          1             mon_ap = new("mon_ap", this);
    21                                                       endfunction
    22                                               
    23                                                       task run_phase(uvm_phase phase);
    24              1                          1                 super.run_phase(phase);
    25              1                          1                 forever begin
    26              1                      15002                     seq_item = SPI_seq_item::type_id::create("seq_item");
    27                                                               //input rst_n, SS_n, MOSI, output MISO
    28              1                      15002                     @(negedge SPI_vif.clk);
    29              1                      15001                     seq_item.rst_n       = SPI_vif.rst_n;
    30              1                      15001                     seq_item.SS_n        = SPI_vif.SS_n;
    31              1                      15001                     seq_item.MOSI        = SPI_vif.MOSI;
    32              1                      15001                     seq_item.MISO        = SPI_vif.MISO;
    33              1                      15001                     seq_item.MISO_GOLDEN = SPI_vif.MISO_GOLDEN;
    34              1                      15001                     mon_ap.write(seq_item);


=================================================================================
=== Instance: /SPI_driver_pkg
=== Design Unit: work.SPI_driver_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      13        11         2    84.61%

================================Statement Details================================

Statement Coverage for instance /SPI_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_driver.sv
    1                                                package SPI_driver_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import SPI_seq_item_pkg::*;
    5                                                
    6                                                    class SPI_driver extends uvm_driver #(SPI_seq_item);
    7               1                    ***0***             `uvm_component_utils(SPI_driver)
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                        virtual SPI_if SPI_vif;
    10                                                       SPI_seq_item seq_item; 
    11                                               
    12                                                       function new(string name = "SPI_driver", uvm_component parent = null);
    13              1                          1                 super.new(name, parent);
    14                                                       endfunction
    15                                               
    16                                                       task run_phase(uvm_phase phase);
    17              1                          1                 super.run_phase(phase);
    18              1                          1                 forever begin
    19              1                      15002                     seq_item = SPI_seq_item::type_id::create("seq_item");
    20              1                      15002                     seq_item_port.get_next_item(seq_item);
    21                                                               //input rst_n, SS_n, MOSI, output MISO
    22              1                      15001                     SPI_vif.rst_n = seq_item.rst_n;
    23              1                      15001                     SPI_vif.SS_n  = seq_item.SS_n;
    24              1                      15001                     SPI_vif.MOSI  = seq_item.MOSI;
    25              1                      15001                     @(negedge SPI_vif.clk);
    26              1                      15001                     seq_item_port.item_done();


=================================================================================
=== Instance: /SPI_agent_pkg
=== Design Unit: work.SPI_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /SPI_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_agent.sv
------------------------------------IF Branch------------------------------------
    25                                         1     Count coming in to IF
    25              1                    ***0***           if (!uvm_config_db #(SPI_config)::get(this, "" , "CONFIG", SPI_cfg))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    26                                   ***0***     Count coming in to IF
    26              1                    ***0***             `uvm_fatal("Build_Phase", "Error in Wrapper Interface in Agent");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    28                                         1     Count coming in to IF
    28              1                          1           if (SPI_cfg.is_active == UVM_ACTIVE) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    39                                         1     Count coming in to IF
    39              1                          1           if (SPI_cfg.is_active == UVM_ACTIVE) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15        12         3    80.00%

================================Statement Details================================

Statement Coverage for instance /SPI_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_agent.sv
    1                                                package SPI_agent_pkg;
    2                                                  import uvm_pkg::*;
    3                                                  `include "uvm_macros.svh"
    4                                                  import SPI_driver_pkg::*;
    5                                                  import SPI_monitor_pkg::*;
    6                                                  import SPI_sequencer_pkg::*;
    7                                                  import SPI_config_pkg::*;
    8                                                  import SPI_seq_item_pkg::*;
    9                                                
    10                                                 class SPI_agent extends uvm_agent;
    11              1                    ***0***         `uvm_component_utils(SPI_agent)
    11              2                    ***0***     
    11              3                          2     
    12                                               
    13                                                   SPI_sequencer sqr;
    14                                                   SPI_driver drv;
    15                                                   SPI_monitor mon;
    16                                                   SPI_config SPI_cfg;
    17                                                   uvm_analysis_port #(SPI_seq_item) agt_ap;
    18                                               
    19                                                   function new(string name = "SPI_agent", uvm_component parent = null);
    20              1                          1           super.new(name, parent);
    21                                                   endfunction
    22                                               
    23                                                   function void build_phase(uvm_phase phase);
    24              1                          1           super.build_phase(phase);
    25                                                     if (!uvm_config_db #(SPI_config)::get(this, "" , "CONFIG", SPI_cfg))
    26              1                    ***0***             `uvm_fatal("Build_Phase", "Error in Wrapper Interface in Agent");
    27                                               
    28                                                     if (SPI_cfg.is_active == UVM_ACTIVE) begin
    29              1                          1             sqr = SPI_sequencer::type_id::create("sqr", this);
    30              1                          1             drv = SPI_driver::type_id::create("drv", this);
    31                                                     end
    32              1                          1           mon = SPI_monitor::type_id::create("mon", this);
    33              1                          1           agt_ap = new("agt_ap", this);
    34                                               
    35                                                   endfunction
    36                                               
    37                                                   function void connect_phase(uvm_phase phase);
    38              1                          1           super.connect_phase(phase);
    39                                                     if (SPI_cfg.is_active == UVM_ACTIVE) begin
    40              1                          1             drv.SPI_vif = SPI_cfg.SPI_vif;
    41              1                          1             drv.seq_item_port.connect(sqr.seq_item_export);
    42                                                     end
    43              1                          1           mon.SPI_vif = SPI_cfg.SPI_vif;
    44              1                          1           mon.mon_ap.connect(agt_ap);


=================================================================================
=== Instance: /SPI_env_pkg
=== Design Unit: work.SPI_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17        15         2    88.23%

================================Statement Details================================

Statement Coverage for instance /SPI_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_env.sv
    1                                                package SPI_env_pkg;
    2                                                  import uvm_pkg::*;
    3                                                  `include "uvm_macros.svh"
    4                                                  import SPI_agent_pkg::*;
    5                                                  import spi_slave_agent_pkg::*;
    6                                                  import ram_agent_pkg::*;
    7                                                  import SPI_scoreboard_pkg::*;
    8                                                  import SPI_coverage_pkg::*;
    9                                                
    10                                                 class SPI_env extends uvm_env;
    11              1                    ***0***         `uvm_component_utils(SPI_env)
    11              2                    ***0***     
    11              3                          2     
    12                                               
    13                                                   SPI_agent agt;
    14                                                   spi_slave_agent SPI_SLAVE_agt;
    15                                                   ram_agent RAM_agt;
    16                                                   SPI_scoreboard sb;
    17                                                   SPI_coverage cov;
    18                                               
    19                                                   function new(string name = "SPI_env", uvm_component parent = null);
    20              1                          1           super.new(name, parent);
    21                                                   endfunction
    22                                               
    23                                                   function void build_phase(uvm_phase phase);
    24              1                          1           super.build_phase(phase);
    25              1                          1           agt = SPI_agent::type_id::create("agt", this);
    26              1                          1           SPI_SLAVE_agt = spi_slave_agent::type_id::create("SPI_SLAVE_agt", this);
    27              1                          1           RAM_agt = ram_agent::type_id::create("RAM_agt", this);
    28              1                          1           sb = SPI_scoreboard::type_id::create("sb", this);
    29              1                          1           cov = SPI_coverage::type_id::create("cov", this);
    30                                                   endfunction
    31                                               
    32                                                   function void connect_phase(uvm_phase phase);
    33              1                          1           super.connect_phase(phase);
    34              1                          1           agt.agt_ap.connect(sb.sb_export_SPI);
    35              1                          1           agt.agt_ap.connect(cov.cov_export_SPI);
    36              1                          1           SPI_SLAVE_agt.agt_ap.connect(sb.sb_export_SPI_SLAVE);
    37              1                          1           SPI_SLAVE_agt.agt_ap.connect(cov.cov_export_SPI_SLAVE);
    38              1                          1           RAM_agt.agt_ap.connect(sb.sb_export_RAM);
    39              1                          1           RAM_agt.agt_ap.connect(cov.cov_export_RAM);


=================================================================================
=== Instance: /SPI_test_pkg
=== Design Unit: work.SPI_test_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        28        11        17    39.28%

================================Branch Details================================

Branch Coverage for instance /SPI_test_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_test.sv
------------------------------------IF Branch------------------------------------
    37                                         1     Count coming in to IF
    37              1                    ***0***           if (!uvm_config_db #(virtual SPI_if)::get(this, "" , "SPI_IF", SPI_cfg.SPI_vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    38                                   ***0***     Count coming in to IF
    38              1                    ***0***             `uvm_fatal("Build_Phase", "Error in Wrapper Interface in test");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    40                                         1     Count coming in to IF
    40              1                    ***0***           if (!uvm_config_db #(virtual SPI_SLAVE_if)::get(this, "" , "SPI_SLAVE_IF", SPI_SLAVE_cfg.SPI_SLAVE_vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    41                                   ***0***     Count coming in to IF
    41              1                    ***0***             `uvm_fatal("Build_Phase", "Error in SPI_SLAVE Interface in test");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    43                                         1     Count coming in to IF
    43              1                    ***0***           if (!uvm_config_db #(virtual RAM_if)::get(this, "" , "RAM_IF", RAM_cfg.RAM_vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    44                                   ***0***     Count coming in to IF
    44              1                    ***0***             `uvm_fatal("Build_Phase", "Error in RAM Interface in test");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    60                                         1     Count coming in to IF
    60              1                          1           `uvm_info("Run_Phase", "Reset Sequence Start.", UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    62                                         1     Count coming in to IF
    62              1                          1           `uvm_info("Run_Phase", "Reset Sequence End.", UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    65                                         1     Count coming in to IF
    65              1                          1           `uvm_info("Run_Phase", "Write Only Sequence Start.", UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    67                                         1     Count coming in to IF
    67              1                          1           `uvm_info("Run_Phase", "Write Only Sequence End.", UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    70                                         1     Count coming in to IF
    70              1                          1           `uvm_info("Run_Phase", "Read Only Sequence Start.", UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    72                                         1     Count coming in to IF
    72              1                          1           `uvm_info("Run_Phase", "Read Only Sequence End.", UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    75                                         1     Count coming in to IF
    75              1                          1           `uvm_info("Run_Phase", "Write and Read Sequence Start.", UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    77                                         1     Count coming in to IF
    77              1                          1           `uvm_info("Run_Phase", "Write and Read Sequence End.", UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      37        32         5    86.48%

================================Statement Details================================

Statement Coverage for instance /SPI_test_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_test.sv
    1                                                package SPI_test_pkg;
    2                                                  import uvm_pkg::*;
    3                                                  `include "uvm_macros.svh"
    4                                                  import SPI_config_pkg::*;
    5                                                  import SPI_env_pkg::*;
    6                                                  import SPI_sequencer_pkg::*;
    7                                                  import SPI_reset_sequence_pkg::*;
    8                                                  import SPI_wr_only_sequence_pkg::*;
    9                                                  import SPI_rd_only_sequence_pkg::*;
    10                                                 import SPI_wr_rd_sequence_pkg::*;
    11                                               
    12                                                 class SPI_test extends uvm_test;
    13              1                    ***0***         `uvm_component_utils(SPI_test)
    13              2                    ***0***     
    13              3                          4     
    14                                               
    15                                                   SPI_config SPI_cfg, SPI_SLAVE_cfg, RAM_cfg;
    16                                                   SPI_env env;
    17                                                   SPI_reset_sequence rst_seq;
    18                                                   SPI_wr_only_sequence wr_only_seq;
    19                                                   SPI_rd_only_sequence rd_only_seq;
    20                                                   SPI_wr_rd_sequence wr_rd_seq; 
    21                                               
    22                                                   function new(string name = "SPI_test", uvm_component parent = null);
    23              1                          1           super.new(name, parent);
    24                                                   endfunction
    25                                               
    26                                                   function void build_phase(uvm_phase phase);
    27              1                          1           super.build_phase(phase);
    28              1                          1           env = SPI_env::type_id::create("env",this);
    29              1                          1           SPI_cfg = SPI_config::type_id::create("SPI_cfg");
    30              1                          1           SPI_SLAVE_cfg = SPI_config::type_id::create("SPI_SLAVE_cfg");
    31              1                          1           RAM_cfg = SPI_config::type_id::create("RAM_cfg");
    32              1                          1           rst_seq = SPI_reset_sequence::type_id::create("rst_seq");
    33              1                          1           wr_only_seq = SPI_wr_only_sequence::type_id::create("wr_only_seq");
    34              1                          1           rd_only_seq = SPI_rd_only_sequence::type_id::create("rd_only_seq");
    35              1                          1           wr_rd_seq = SPI_wr_rd_sequence::type_id::create("wr_rd_seq");
    36                                                     
    37                                                     if (!uvm_config_db #(virtual SPI_if)::get(this, "" , "SPI_IF", SPI_cfg.SPI_vif))
    38              1                    ***0***             `uvm_fatal("Build_Phase", "Error in Wrapper Interface in test");
    39                                               
    40                                                     if (!uvm_config_db #(virtual SPI_SLAVE_if)::get(this, "" , "SPI_SLAVE_IF", SPI_SLAVE_cfg.SPI_SLAVE_vif))
    41              1                    ***0***             `uvm_fatal("Build_Phase", "Error in SPI_SLAVE Interface in test");
    42                                                       
    43                                                     if (!uvm_config_db #(virtual RAM_if)::get(this, "" , "RAM_IF", RAM_cfg.RAM_vif))
    44              1                    ***0***             `uvm_fatal("Build_Phase", "Error in RAM Interface in test");
    45                                               
    46              1                          1           SPI_cfg.is_active = UVM_ACTIVE;
    47              1                          1           SPI_SLAVE_cfg.is_active = UVM_PASSIVE;
    48              1                          1           RAM_cfg.is_active = UVM_PASSIVE;  
    49                                               
    50              1                          1           uvm_config_db #(SPI_config)::set(this, "*", "CONFIG", SPI_cfg);
    51              1                          1           uvm_config_db #(SPI_config)::set(this, "*", "CONFIG_SPI_SLAVE", SPI_SLAVE_cfg);
    52              1                          1           uvm_config_db #(SPI_config)::set(this, "*", "CONFIG_RAM", RAM_cfg);
    53                                                   endfunction
    54                                               
    55                                                   task run_phase(uvm_phase phase);
    56              1                          1           super.run_phase(phase);
    57              1                          1           phase.raise_objection(this);
    58                                               
    59                                                     //reset sequence
    60              1                          1           `uvm_info("Run_Phase", "Reset Sequence Start.", UVM_MEDIUM)
    61              1                          1           rst_seq.start(env.agt.sqr);
    62              1                          1           `uvm_info("Run_Phase", "Reset Sequence End.", UVM_MEDIUM)
    63                                                     
    64                                                     //Write only sequence
    65              1                          1           `uvm_info("Run_Phase", "Write Only Sequence Start.", UVM_MEDIUM)
    66              1                          1           wr_only_seq.start(env.agt.sqr);
    67              1                          1           `uvm_info("Run_Phase", "Write Only Sequence End.", UVM_MEDIUM)
    68                                               
    69                                                     //Read only sequence
    70              1                          1           `uvm_info("Run_Phase", "Read Only Sequence Start.", UVM_MEDIUM)
    71              1                          1           rd_only_seq.start(env.agt.sqr);
    72              1                          1           `uvm_info("Run_Phase", "Read Only Sequence End.", UVM_MEDIUM)
    73                                               
    74                                                     //Write and Read sequence
    75              1                          1           `uvm_info("Run_Phase", "Write and Read Sequence Start.", UVM_MEDIUM)
    76              1                          1           wr_rd_seq.start(env.agt.sqr);
    77              1                          1           `uvm_info("Run_Phase", "Write and Read Sequence End.", UVM_MEDIUM)
    78                                               
    79              1                          1           phase.drop_objection(this);


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /SPI_coverage_pkg/SPI_coverage/cvr_grp_SPI_SLAVE 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    15         15          -                      
    missing/total bins:                                     0         15          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint reciver_data                           100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint SS_n_allcases                          100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint SS_n_read_data                         100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint SS_n                                   100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint mosi                                   100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_mosi_SS_n                             100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/SPI_coverage_pkg::SPI_coverage::cvr_grp_SPI_SLAVE  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    15         15          -                      
    missing/total bins:                                     0         15          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint reciver_data                           100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      5039          1          -    Covered              
        bin auto[1]                                      3010          1          -    Covered              
        bin auto[2]                                      2836          1          -    Covered              
        bin auto[3]                                      4116          1          -    Covered              
    Coverpoint SS_n_allcases                          100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin trans_all_cases                                 1          1          -    Covered              
    Coverpoint SS_n_read_data                         100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin trans_read                                    202          1          -    Covered              
    Coverpoint SS_n                                   100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin SS_n_val                                    14003          1          -    Covered              
    Coverpoint mosi                                   100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        bin write_add                                    2791          1          -    Covered              
        bin write_data                                   1828          1          -    Covered              
        bin read_add                                     1814          1          -    Covered              
        bin read_data                                    1892          1          -    Covered              
        bin mosi_val_low                                 7957          1          -    Covered              
        bin mosi_val_high                                7044          1          -    Covered              
    Cross cross_mosi_SS_n                             100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin SS_n_low_mosi_low                        7427          1          -    Covered              
            bin SS_n_low_mosi_high                       6576          1          -    Covered              
 TYPE /SPI_coverage_pkg/SPI_coverage/cvr_grp_RAM      100.00%        100          -    Covered              
    covered/total bins:                                    11         11          -                      
    missing/total bins:                                     0         11          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint transaction_ordering_cp                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint rx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint tx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_op_rx_cp                              100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_op_tx_cp                              100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/SPI_coverage_pkg::SPI_coverage::cvr_grp_RAM  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    11         11          -                      
    missing/total bins:                                     0         11          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint transaction_ordering_cp                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin all_values                                  15001          1          -    Covered              
        bin wr_data_after_wr_address                       69          1          -    Covered              
        bin rd_data_after_rd_address                      125          1          -    Covered              
        bin full_transition                                 9          1          -    Covered              
    Coverpoint rx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin rx_high                                      2281          1          -    Covered              
    Coverpoint tx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin tx_high                                      1565          1          -    Covered              
    Cross cross_op_rx_cp                              100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <full_transition,rx_high>                   9          1          -    Covered              
            bin <rd_data_after_rd_address,rx_high>        125          1          -    Covered              
            bin <wr_data_after_wr_address,rx_high>         67          1          -    Covered              
            bin <all_values,rx_high>                     2281          1          -    Covered              
    Cross cross_op_tx_cp                              100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin rd_data_tx_high                          1565          1          -    Covered              

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 2

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/DUT_SPI/cover__chck_state_read_datato_idle 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(201)
                                                                                57 Covered   
/top/DUT/DUT_SPI/cover__chck_state_read_add_to_idle 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(200)
                                                                                65 Covered   
/top/DUT/DUT_SPI/cover__chck_state_write_to_idle 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(199)
                                                                               124 Covered   
/top/DUT/DUT_SPI/cover__chck_state_read_data 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(198)
                                                                               184 Covered   
/top/DUT/DUT_SPI/cover__chck_state_read_add 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(197)
                                                                               324 Covered   
/top/DUT/DUT_SPI/cover__chck_state_write SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(196)
                                                                               638 Covered   
/top/DUT/DUT_SPI/cover__chck_state_idle  SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(195)
                                                                              1208 Covered   
/top/DUT/DUT_SPI/cover__chck_rx_valid    SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(194)
                                                                                 2 Covered   
/top/DUT/DUT_SPI/cover__chck_reset       SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(193)
                                                                               295 Covered   
/top/DUT/Wrapper_BINDING/RESET_cover     SPI_sva Verilog  SVA  SPI_sva.sv(26)   295 Covered   
/top/DUT/Wrapper_BINDING/READ_DATA_cover SPI_sva Verilog  SVA  SPI_sva.sv(27)   958 Covered   
/top/DUT_SPI_SLAVE/cover__chck_state_read_datato_idle 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(201)
                                                                                57 Covered   
/top/DUT_SPI_SLAVE/cover__chck_state_read_add_to_idle 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(200)
                                                                                65 Covered   
/top/DUT_SPI_SLAVE/cover__chck_state_write_to_idle 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(199)
                                                                               124 Covered   
/top/DUT_SPI_SLAVE/cover__chck_state_read_data 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(198)
                                                                               184 Covered   
/top/DUT_SPI_SLAVE/cover__chck_state_read_add 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(197)
                                                                               324 Covered   
/top/DUT_SPI_SLAVE/cover__chck_state_write 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(196)
                                                                               638 Covered   
/top/DUT_SPI_SLAVE/cover__chck_state_idle 
                                         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(195)
                                                                              1208 Covered   
/top/DUT_SPI_SLAVE/cover__chck_rx_valid  SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(194)
                                                                                 2 Covered   
/top/DUT_SPI_SLAVE/cover__chck_reset     SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(193)
                                                                               295 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 20

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/DUT_SPI/assert__chck_state_read_datato_idle
                     SPI_SLAVE.sv(191)                  0          1
/top/DUT/DUT_SPI/assert__chck_state_read_add_to_idle
                     SPI_SLAVE.sv(190)                  0          1
/top/DUT/DUT_SPI/assert__chck_state_write_to_idle
                     SPI_SLAVE.sv(189)                  0          1
/top/DUT/DUT_SPI/assert__chck_state_read_data
                     SPI_SLAVE.sv(188)                  0          1
/top/DUT/DUT_SPI/assert__chck_state_read_add
                     SPI_SLAVE.sv(187)                  0          1
/top/DUT/DUT_SPI/assert__chck_state_write
                     SPI_SLAVE.sv(186)                  0          1
/top/DUT/DUT_SPI/assert__chck_state_idle
                     SPI_SLAVE.sv(185)                  0          1
/top/DUT/DUT_SPI/assert__chck_rx_valid
                     SPI_SLAVE.sv(184)                  0          1
/top/DUT/DUT_SPI/assert__chck_reset
                     SPI_SLAVE.sv(183)                  0          1
/top/DUT/DUT_RAM/RAM_BINDING/rst_n_assertion
                     RAM_sva.sv(2)                      0          1
/top/DUT/DUT_RAM/RAM_BINDING/tx_valid_0_assertion
                     RAM_sva.sv(3)                      0          1
/top/DUT/DUT_RAM/RAM_BINDING/tx_valid_1_assertion
                     RAM_sva.sv(4)                      0          1
/top/DUT/DUT_RAM/RAM_BINDING/wr_addr_then_wr_data_assertion
                     RAM_sva.sv(5)                      0          1
/top/DUT/DUT_RAM/RAM_BINDING/rd_addr_then_rd_data_assertion
                     RAM_sva.sv(6)                      0          1
/top/DUT/Wrapper_BINDING/RESET_assert
                     SPI_sva.sv(22)                     0          1
/top/DUT/Wrapper_BINDING/READ_DATA_assert
                     SPI_sva.sv(23)                     0          1
/top/DUT_SPI_SLAVE/assert__chck_state_read_datato_idle
                     SPI_SLAVE.sv(191)                  0          1
/top/DUT_SPI_SLAVE/assert__chck_state_read_add_to_idle
                     SPI_SLAVE.sv(190)                  0          1
/top/DUT_SPI_SLAVE/assert__chck_state_write_to_idle
                     SPI_SLAVE.sv(189)                  0          1
/top/DUT_SPI_SLAVE/assert__chck_state_read_data
                     SPI_SLAVE.sv(188)                  0          1
/top/DUT_SPI_SLAVE/assert__chck_state_read_add
                     SPI_SLAVE.sv(187)                  0          1
/top/DUT_SPI_SLAVE/assert__chck_state_write
                     SPI_SLAVE.sv(186)                  0          1
/top/DUT_SPI_SLAVE/assert__chck_state_idle
                     SPI_SLAVE.sv(185)                  0          1
/top/DUT_SPI_SLAVE/assert__chck_rx_valid
                     SPI_SLAVE.sv(184)                  0          1
/top/DUT_SPI_SLAVE/assert__chck_reset
                     SPI_SLAVE.sv(183)                  0          1
/top/DUT_RAM/RAM_BINDING/rst_n_assertion
                     RAM_sva.sv(2)                      0          1
/top/DUT_RAM/RAM_BINDING/tx_valid_0_assertion
                     RAM_sva.sv(3)                      0          1
/top/DUT_RAM/RAM_BINDING/tx_valid_1_assertion
                     RAM_sva.sv(4)                      0          1
/top/DUT_RAM/RAM_BINDING/wr_addr_then_wr_data_assertion
                     RAM_sva.sv(5)                      0          1
/top/DUT_RAM/RAM_BINDING/rd_addr_then_rd_data_assertion
                     RAM_sva.sv(6)                      0          1
/SPI_wr_rd_sequence_pkg/SPI_wr_rd_sequence/body/#ublk#82182855#19/immed__36
                     SPI_wr_rd_sequence.sv(36)          0          1
/SPI_rd_only_sequence_pkg/SPI_rd_only_sequence/body/#ublk#266676679#19/immed__36
                     SPI_rd_only_sequence.sv(36)
                                                        0          1
/SPI_wr_only_sequence_pkg/SPI_wr_only_sequence/body/#ublk#31795623#19/immed__35
                     SPI_wr_only_sequence.sv(35)
                                                        0          1

Total Coverage By Instance (filtered view): 89.88%

